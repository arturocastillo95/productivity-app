{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nfunction fancyTimeFormat(duration) {\n  // Hours, minutes and seconds\n  var hrs = ~~(duration / 3600);\n  var mins = ~~(duration % 3600 / 60);\n  var secs = ~~duration % 60; // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n\n  var ret = \"\";\n\n  if (hrs > 0) {\n    ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n  }\n\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n  ret += \"\" + secs;\n  return ret;\n}\n\nconst Timer = ({\n  seconds,\n  onTimeUpdate\n}) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n  useEffect(() => {\n    // exit early when we reach 0\n    if (!timeLeft) return; // save intervalId to clear the interval when the\n    // component re-renders\n\n    const intervalId = setInterval(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n        onTimeUpdate(seconds);\n      }\n    }, 1000); // clear interval on re-render to avoid memory leaks\n\n    return () => clearInterval(intervalId); // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n  useEffect(() => {\n    setTimeLeft(seconds);\n  }, [seconds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, fancyTimeFormat(timeLeft)));\n};\n\nconst StartTimer = ({\n  value\n}) => {\n  const [seconds, setTimer] = useState('0'); // const startTimer = e => {\n  //     console.log(value.duration)\n  //     setTimer( value.duration )\n  // }\n\n  function timeUpdate(s) {\n    console.log(s);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => setTimer(value.remaining),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Timer, {\n    seconds: seconds,\n    onTimeUpdate: timeUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst SortableItem = SortableElement(({\n  value\n}) => {\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level is-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, value.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StartTimer, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 33\n    }\n  })))))));\n});\nconst SortableComponent = SortableContainer(({\n  items\n}) => {\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, items.map((value, index) => /*#__PURE__*/React.createElement(SortableItem, {\n    key: value.id,\n    index: index,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  })));\n});\nexport default function SortableList() {\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/task-list/').then(response => response.json()).then(data => {\n      data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n      setTasks(data);\n    }); // return () => {\n    //     cleanup\n    // };\n  }, []);\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    var newOrder = [...tasks];\n    newOrder = arrayMove(newOrder, oldIndex, newIndex);\n    newOrder.forEach((task, index) => {\n      var url = 'http://127.0.0.1:8000/api/task-update/' + task.id + '/';\n      var csrf_token = getCookie('csrftoken');\n      task.order = index;\n      fetch(url, {\n        'method': 'POST',\n        'headers': {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrf_token\n        },\n        'body': JSON.stringify(task)\n      });\n    });\n    setTasks(newOrder);\n  };\n\n  return /*#__PURE__*/React.createElement(SortableComponent, {\n    items: tasks,\n    onSortEnd: onSortEnd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js"],"names":["React","useState","useEffect","SortableContainer","SortableElement","arrayMove","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fancyTimeFormat","duration","hrs","mins","secs","ret","Timer","seconds","onTimeUpdate","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","StartTimer","value","setTimer","timeUpdate","s","console","log","remaining","SortableItem","title","SortableComponent","items","map","index","id","SortableList","tasks","setTasks","fetch","then","response","json","data","sort","a","b","order","onSortEnd","oldIndex","newIndex","newOrder","forEach","task","url","csrf_token","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nfunction fancyTimeFormat(duration)\n{   \n    // Hours, minutes and seconds\n    var hrs = ~~(duration / 3600);\n    var mins = ~~((duration % 3600) / 60);\n    var secs = ~~duration % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n\n    if (hrs > 0) {\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n}\n\nconst Timer = ({ seconds, onTimeUpdate }) => {\n    // initialize timeLeft with the seconds prop\n    const [timeLeft, setTimeLeft] = useState(seconds);\n  \n    useEffect(() => {\n      // exit early when we reach 0\n        if (!timeLeft) return;\n\n      // save intervalId to clear the interval when the\n      // component re-renders\n        const intervalId = setInterval(() => {\n        if (timeLeft > 0) {\n            setTimeLeft(timeLeft - 1);\n            onTimeUpdate(seconds)\n\n        }\n        }, 1000);\n  \n      // clear interval on re-render to avoid memory leaks\n        return () => clearInterval(intervalId);\n      // add timeLeft as a dependency to re-rerun the effect\n      // when we update it\n    }, [timeLeft]);\n\n    useEffect(() => {\n        setTimeLeft(seconds)\n    }, [seconds])\n\n    return (\n    <div>\n        <h1 className='has-text-success'>{fancyTimeFormat(timeLeft)}</h1>\n    </div>\n    );\n    };\n\nconst StartTimer = ({ value }) => {\n\n    const [seconds, setTimer] = useState('0')\n\n    // const startTimer = e => {\n    //     console.log(value.duration)\n    //     setTimer( value.duration )\n    // }\n\n    function timeUpdate(s) {\n        console.log(s)\n    }\n    \n    return (\n        <div className=\"level-item\">\n            <a onClick={() => setTimer(value.remaining)}>\n                <span className=\"icon has-text-success\">\n                    <i className=\"fas fa-play\"></i>\n                </span>\n            </a>\n            <Timer seconds={seconds} onTimeUpdate={timeUpdate}/>\n        </div>\n    )\n}\n\n\n\nconst SortableItem = SortableElement(({value}) => {\n    return (\n        <li className=\"box\">\n            <div className=\"level is-mobile\">\n                <div className=\"level-left\">\n                    <input type=\"checkbox\"/>\n                </div>\n\n                <div className=\"level-item\">\n                    <h1 className=\"title is-5\">\n                        {value.title}\n                    </h1>\n                </div>\n\n                <div className=\"level-right\">\n\n                    <StartTimer value={value}/>\n\n                    <div className=\"level-item\">\n                        <a href=\"\">\n                            <span className=\"icon has-text-warning\">\n                                <i className=\"fas fa-edit\"></i>\n                            </span>\n                        </a>\n                    </div>\n                </div>\n\n            </div>\n        </li>\n    )\n});\n\nconst SortableComponent = SortableContainer(({items}) => {\n    return (\n    <ul>\n        {items.map((value, index) => (\n          <SortableItem key={value.id} index={index} value={value} />\n        ))}\n      </ul>\n    )\n})\n\nexport default function SortableList() {\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/api/task-list/')\n        .then(response => response.json())\n        .then(data => {\n            data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0))\n            setTasks(data)\n            }\n        )\n        // return () => {\n        //     cleanup\n        // };\n    }, []);\n\n    const onSortEnd =  ({oldIndex, newIndex}) => {\n        var newOrder = [...tasks];\n        newOrder = arrayMove(newOrder, oldIndex, newIndex);\n                        \n        newOrder.forEach((task, index) => {\n            var url = 'http://127.0.0.1:8000/api/task-update/' + task.id + '/'\n            var csrf_token = getCookie('csrftoken');\n            task.order = index;\n\n            fetch(url, {\n                'method': 'POST',\n                'headers': {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrf_token,\n                },\n                'body': JSON.stringify(task)\n            })\n\n\n        })\n\n        setTasks(newOrder)\n\n    }\n\n    return (\n        <SortableComponent items={tasks} onSortEnd={onSortEnd}/>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}