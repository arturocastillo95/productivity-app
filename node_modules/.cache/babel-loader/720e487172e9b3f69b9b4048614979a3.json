{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Form.js\";\nimport React, { useState } from 'react';\nimport { getCookie, createSampleTasks, taskUpdate, createTask } from './utils';\nimport { DurationSelector } from './DurationSelector';\nexport default function Form({\n  editValue,\n  onTaskCreated,\n  onCancelCreate,\n  onUpdateTasks\n}) {\n  const [value, setValue] = useState(Object.keys(editValue).length === 0 ? {\n    'title': '',\n    'duration': 1800,\n    'remaining': 1800\n  } : editValue);\n\n  const handleCreate = e => {\n    e.preventDefault();\n    if (!value.title) return;\n    var csrf_token = getCookie('csrftoken');\n\n    if (!value.id) {\n      createTask(value, csrf_token);\n      onTaskCreated(value);\n      return;\n    }\n\n    taskUpdate(value, csrf_token);\n    onUpdateTasks();\n  };\n\n  const handleCreateSamples = () => {\n    createSampleTasks();\n    onUpdateTasks();\n  };\n\n  function setTaskName(name) {\n    value.title = name;\n    setValue(value);\n  }\n\n  function setTaskDuration(duration) {\n    switch (duration) {\n      default:\n        value.duration = value.remaining = 1800;\n        setValue(value);\n        break;\n\n      case 'Medium (1 hr)':\n        value.duration = value.remaining = 3600;\n        setValue(value);\n        break;\n\n      case 'Long (2 hrs)':\n        value.duration = value.remaining = 7200;\n        setValue(value);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-3 has-text-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Create New Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Task Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Get stuff done!\",\n    type: \"text\",\n    className: \"input\",\n    onChange: e => setTaskName(e.target.value),\n    defaultValue: value.title,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(DurationSelector, {\n    setTaskDuration: setTaskDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button is-success is-fullwidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, value.id != null && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Save changes\"), value.title === '' && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Create Task\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-danger is-fullwidth mt-3\",\n    onClick: onCancelCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), value.title === '' && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-info is-fullwidth mt-3\",\n    onClick: handleCreateSamples,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-vial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Generate Sample Tasks\")));\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Form.js"],"names":["React","useState","getCookie","createSampleTasks","taskUpdate","createTask","DurationSelector","Form","editValue","onTaskCreated","onCancelCreate","onUpdateTasks","value","setValue","Object","keys","length","handleCreate","e","preventDefault","title","csrf_token","id","handleCreateSamples","setTaskName","name","setTaskDuration","duration","remaining","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {getCookie, createSampleTasks, taskUpdate, createTask} from './utils'\nimport {DurationSelector} from './DurationSelector'\n\nexport default function Form({ editValue, onTaskCreated, onCancelCreate, onUpdateTasks }) {\n    const [value, setValue] = useState((Object.keys(editValue).length === 0 ? {'title': '', 'duration': 1800, 'remaining': 1800} : editValue));\n\n    const handleCreate = e => {\n        e.preventDefault();\n        if (!value.title) return;\n        \n        var csrf_token = getCookie('csrftoken');\n\n        if (!value.id) {\n            createTask(value, csrf_token);\n            onTaskCreated(value);\n            return;\n        }\n\n        taskUpdate(value, csrf_token);\n        onUpdateTasks();\n    };\n\n    const handleCreateSamples = () => {\n        createSampleTasks();\n        onUpdateTasks();\n    }\n\n    function setTaskName(name) {\n        value.title = name;\n        setValue(value);\n    }\n\n    function setTaskDuration(duration) {\n        switch(duration) {\n            default:\n                value.duration = value.remaining = 1800;\n                setValue(value);\n                break;\n            case 'Medium (1 hr)':\n                value.duration = value.remaining = 3600;\n                setValue(value);\n                break;\n            case 'Long (2 hrs)':\n                value.duration = value.remaining = 7200;\n                setValue(value);\n                break;\n        }\n    }\n\n    return (\n        <>\n        <form onSubmit={ handleCreate }>\n\n            <h1 className=\"title is-3 has-text-centered\">\n                Create New Task\n            </h1>\n\n            <div className=\"field\">\n                <label className='label'>Task Name</label>\n                <div className=\"control is-expanded\">\n                    <input\n                        placeholder='Get stuff done!'\n                        type=\"text\" \n                        className=\"input\" \n                        onChange={e => setTaskName(e.target.value)}\n                        defaultValue={value.title}\n                        autoFocus\n                    />\n                </div>\n            </div>\n\n            <DurationSelector setTaskDuration={setTaskDuration}/>\n\n            <button type='submit' className='button is-success is-fullwidth'>\n                <span className=\"icon\">\n                    <i className=\"fas fa-check\"></i>\n                </span>\n                <span className='has-text-weight-bold'>\n                    {value.id != null &&\n                    <span>Save changes</span>\n                    }\n                    {value.title === '' &&\n                    <span>Create Task</span>\n                    }\n                </span>\n            </button>\n\n        </form>\n\n            <button className='button is-danger is-fullwidth mt-3' onClick={onCancelCreate}>\n                <span className=\"icon\">\n                    <i className=\"fas fa-times\"></i>\n                </span>\n                <span className='has-text-weight-bold'>Cancel</span>\n            </button>\n\n            {value.title === '' &&             \n            <button className='button is-info is-fullwidth mt-3' onClick={handleCreateSamples}>\n                <span className=\"icon\">\n                    <i className=\"fas fa-vial\"></i>\n                </span>\n                <span className='has-text-weight-bold'>Generate Sample Tasks</span>\n            </button>\n            }\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}