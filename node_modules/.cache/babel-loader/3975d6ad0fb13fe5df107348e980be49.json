{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nfunction fancyTimeFormat(duration) {\n  // Hours, minutes and seconds\n  var hrs = ~~(duration / 3600);\n  var mins = ~~(duration % 3600 / 60);\n  var secs = ~~duration % 60; // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n\n  var ret = \"\";\n\n  if (hrs > 0) {\n    ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n  }\n\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n  ret += \"\" + secs;\n  return ret;\n}\n\nconst Timer = ({\n  seconds,\n  onTimeUpdate\n}) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n  useEffect(() => {\n    // exit early when we reach 0\n    if (!timeLeft) return; // save intervalId to clear the interval when the\n    // component re-renders\n\n    const intervalId = setInterval(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n        onTimeUpdate(timeLeft);\n      }\n    }, 1000); // clear interval on re-render to avoid memory leaks\n\n    return () => clearInterval(intervalId); // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n  useEffect(() => {\n    setTimeLeft(seconds);\n  }, [seconds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, fancyTimeFormat(timeLeft)));\n};\n\nconst StartTimer = ({\n  value,\n  onTimerStart,\n  onTimerPause\n}) => {\n  const [timer, setTimer] = useState({\n    'state': 'paused',\n    'seconds': '0'\n  });\n  const {\n    active,\n    setActive\n  } = useContext(ActiveTask);\n\n  function startTimer() {\n    setTimer({\n      'state': 'running',\n      'seconds': value.remaining\n    });\n    setActive(true);\n    onTimerStart();\n  }\n\n  function pauseTimer() {\n    setTimer({\n      'state': 'paused',\n      'seconds': '0'\n    });\n    setActive(false);\n    onTimerPause();\n  }\n\n  function timeUpdate(s) {\n    var url = 'http://127.0.0.1:8000/api/task-update/' + value.id + '/';\n    var csrf_token = getCookie('csrftoken');\n    var new_remaining = value;\n    new_remaining.remaining = s;\n    fetch(url, {\n      'method': 'POST',\n      'headers': {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrf_token\n      },\n      'body': JSON.stringify(value)\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, timer.state === 'paused' && active === false && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }))), timer.state === 'running' && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    onClick: pauseTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }))), timer.state === 'running' && /*#__PURE__*/React.createElement(Timer, {\n    seconds: timer.seconds,\n    onTimeUpdate: timeUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst SortableItem = SortableElement(({\n  value,\n  onActivateTask,\n  onDeleteTask,\n  onFinishedTask\n}) => {\n  const [active_style, setActiveStyle] = useState(false);\n\n  function timerStarted() {\n    onActivateTask(value.id);\n    setActiveStyle(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"box \" + (active_style ? 'task-is-active' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level is-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: () => onFinishedTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-5 \" + (value.completed ? 'is-completed' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, value.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StartTimer, {\n    value: value,\n    onTimerStart: timerStarted,\n    onTimerPause: () => setActiveStyle(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: e => onDeleteTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-lg fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  })))))));\n});\nconst SortableComponent = SortableContainer(({\n  items,\n  onFocusTask,\n  onDeleteTask,\n  onFinishedTask\n}) => {\n  const [tasks, setTasks] = useState(items);\n  useEffect(() => {\n    setTasks(items);\n  }, [items]);\n\n  function setActiveTask(taskId) {\n    var index = items.findIndex(i => i.id === taskId);\n    onFocusTask(index);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, items.map((value, index) => /*#__PURE__*/React.createElement(SortableItem, {\n    key: value.id,\n    index: index,\n    value: value,\n    onActivateTask: setActiveTask,\n    onDeleteTask: onDeleteTask,\n    onFinishedTask: onFinishedTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })));\n}); // Context\n\nexport const ActiveTask = React.createContext(false);\nexport default function SortableList({\n  newTaskCreated\n}) {\n  const [tasks, setTasks] = useState([]);\n  const [active, setActive] = useState(false);\n  const active_task = {\n    active,\n    setActive\n  };\n  const isInitialMount = useRef(true); // function lastToTop(values) {\n  //     var newValues = values;\n  //     console.log(newValues)\n  //     var topItem = newValues[-1];\n  //     console.log(topItem)\n  //     newValues.splice(-1,1);\n  //     newValues.unshift(topItem)\n  //     return newValues\n  // }\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      var hello = fetch('http://127.0.0.1:8000/api/task-list/').then(response => response.json()).then(data => {\n        data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n        setTasks(data);\n      });\n      var newTasks = [...tasks];\n      console.log(newTasks); // console.log(lastToTop(newTasks))\n      // setTasks(lastToTop(tasks))\n    }\n  }, [newTaskCreated]);\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/task-list/').then(response => response.json()).then(data => {\n      data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n      setTasks(data);\n    }); // return () => {\n    //     cleanup\n    // };\n  }, []);\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    var newOrder = [...tasks];\n    newOrder = arrayMove(newOrder, oldIndex, newIndex);\n    newOrder.forEach((task, index) => {\n      var url = 'http://127.0.0.1:8000/api/task-update/' + task.id + '/';\n      var csrf_token = getCookie('csrftoken');\n      task.order = index;\n      fetch(url, {\n        'method': 'POST',\n        'headers': {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrf_token\n        },\n        'body': JSON.stringify(task)\n      });\n    });\n    setTasks(newOrder);\n  };\n\n  function deleteTask(e) {\n    var newTasks = tasks.filter(i => i.id !== e.id);\n    setTasks(newTasks);\n    var csrf_token = getCookie('csrftoken');\n    var url = 'http://127.0.0.1:8000/api/task-delete/' + e.id + '/';\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrf_token\n      }\n    });\n  }\n\n  function markTaskAsComplete(e) {\n    var index = tasks.findIndex(i => i.id === e.id);\n    var updates = [...tasks];\n    updates[index].completed = true;\n    console.log(updates[index]);\n    setTasks(updates);\n    console.log(tasks[index]);\n  }\n\n  function focusTask(taskIndex) {\n    var focusTask = tasks[taskIndex];\n    var newOrder = tasks;\n    newOrder.splice(taskIndex, 1);\n    newOrder.unshift(focusTask);\n    setTasks(newOrder);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActiveTask.Provider, {\n    value: active_task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SortableComponent, {\n    items: tasks,\n    onSortEnd: onSortEnd,\n    onFocusTask: focusTask,\n    onDeleteTask: deleteTask,\n    onFinishedTask: markTaskAsComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js"],"names":["React","useState","useEffect","useContext","useRef","SortableContainer","SortableElement","arrayMove","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fancyTimeFormat","duration","hrs","mins","secs","ret","Timer","seconds","onTimeUpdate","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","StartTimer","value","onTimerStart","onTimerPause","timer","setTimer","active","setActive","ActiveTask","startTimer","remaining","pauseTimer","timeUpdate","s","url","id","csrf_token","new_remaining","fetch","JSON","stringify","state","SortableItem","onActivateTask","onDeleteTask","onFinishedTask","active_style","setActiveStyle","timerStarted","completed","title","e","SortableComponent","items","onFocusTask","tasks","setTasks","setActiveTask","taskId","index","findIndex","map","createContext","SortableList","newTaskCreated","active_task","isInitialMount","current","hello","then","response","json","data","sort","a","b","order","newTasks","console","log","onSortEnd","oldIndex","newIndex","newOrder","forEach","task","deleteTask","filter","method","headers","markTaskAsComplete","updates","focusTask","taskIndex","splice","unshift"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useRef} from 'react'\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nfunction fancyTimeFormat(duration)\n{   \n    // Hours, minutes and seconds\n    var hrs = ~~(duration / 3600);\n    var mins = ~~((duration % 3600) / 60);\n    var secs = ~~duration % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n\n    if (hrs > 0) {\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n}\n\nconst Timer = ({ seconds, onTimeUpdate }) => {\n    // initialize timeLeft with the seconds prop\n    const [timeLeft, setTimeLeft] = useState(seconds);\n  \n    useEffect(() => {\n      // exit early when we reach 0\n        if (!timeLeft) return;\n\n      // save intervalId to clear the interval when the\n      // component re-renders\n        const intervalId = setInterval(() => {\n        if (timeLeft > 0) {\n            setTimeLeft(timeLeft - 1);\n            onTimeUpdate(timeLeft)\n        }\n        }, 1000);\n  \n      // clear interval on re-render to avoid memory leaks\n        return () => clearInterval(intervalId);\n      // add timeLeft as a dependency to re-rerun the effect\n      // when we update it\n    }, [timeLeft]);\n\n    useEffect(() => {\n        setTimeLeft(seconds)\n    }, [seconds])\n\n    return (\n    <div>\n        <h1 className='has-text-success'>{fancyTimeFormat(timeLeft)}</h1>\n    </div>\n    );\n    };\n\n\n\nconst StartTimer = ({ value, onTimerStart, onTimerPause }) => {\n\n    const [timer, setTimer] = useState({'state': 'paused', 'seconds': '0'});\n    const {active, setActive} = useContext(ActiveTask);\n\n    function startTimer() {\n        setTimer({'state': 'running', 'seconds': value.remaining});\n        setActive(true);\n        onTimerStart();\n    }\n\n    function pauseTimer() {\n        setTimer({'state': 'paused', 'seconds': '0'});\n        setActive(false);\n        onTimerPause();\n    }\n\n    function timeUpdate(s) {\n        var url = 'http://127.0.0.1:8000/api/task-update/' + value.id + '/';\n        var csrf_token = getCookie('csrftoken');\n\n        var new_remaining = value\n        new_remaining.remaining = s\n\n        fetch(url, {\n            'method': 'POST',\n            'headers': {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrf_token,\n            },\n            'body': JSON.stringify(value)\n            });\n\n        }\n    \n    \n    return (\n        <div className=\"level-item\">\n\n            {timer.state === 'paused' && active === false &&\n            <a href=\"/#\" onClick={startTimer}>\n                <span className=\"icon has-text-success\">\n                    <i className=\"fas fa-play\"></i>\n                </span>\n            </a>\n            }\n            \n            {timer.state === 'running' &&\n            <a href=\"/#\" onClick={pauseTimer}>\n                <span className=\"icon has-text-success\">\n                    <i className=\"fas fa-pause\"></i>\n                </span>\n            </a>\n            }\n\n            {timer.state === 'running' && \n            <Timer seconds={timer.seconds} onTimeUpdate={timeUpdate}/>\n            }\n\n        </div>\n    )\n}\n\n\n\nconst SortableItem = SortableElement(({value, onActivateTask, onDeleteTask, onFinishedTask}) => {\n    const [active_style, setActiveStyle] = useState(false)\n\n    function timerStarted() {\n        onActivateTask(value.id);\n        setActiveStyle(true);\n    }\n\n    return (\n        <li className={\"box \" + (active_style ? 'task-is-active': '')}>\n            <div className=\"level is-mobile\">\n                <div className=\"level-left\">\n                    <input type=\"checkbox\" onChange={() => onFinishedTask(value)}/>\n                </div>\n\n                <div className=\"level-item\">\n                    <h1 className={\"title is-5 \" + (value.completed ? 'is-completed': '')}>\n                        {value.title}\n                    </h1>\n                </div>\n\n                <div className=\"level-right\">\n\n                    <StartTimer value={value} onTimerStart={timerStarted} onTimerPause={() => setActiveStyle(false)}/>\n\n                    <div className=\"level-item\">\n                        <a href=\"#/\">\n                            <span className=\"icon has-text-warning\">\n                                <i className=\"fas fa-edit\"></i>\n                            </span>\n                        </a>\n                    </div>\n\n                    <div className=\"level-item\">\n                        <a href=\"#/\" onClick={e => onDeleteTask(value)}>\n                            <span className=\"icon has-text-danger\">\n                                <i className=\"fas fa-lg fa-times\"></i>\n                            </span>\n                        </a>\n                    </div>\n\n                </div>\n\n            </div>\n        </li>\n    )\n});\n\nconst SortableComponent = SortableContainer(({items, onFocusTask, onDeleteTask, onFinishedTask}) => {\n    const [tasks, setTasks] = useState(items)\n\n    useEffect(() => {\n        setTasks(items)\n    }, [items])\n\n    function setActiveTask(taskId) {\n        var index = items.findIndex(i => i.id === taskId);\n        onFocusTask(index);\n    }\n\n    return (\n    <ul>\n        {items.map((value, index) => (\n            <SortableItem key={value.id} index={index} value={value} onActivateTask={setActiveTask} onDeleteTask={onDeleteTask} onFinishedTask={onFinishedTask}/>\n        ))}\n    </ul>\n    )\n})\n\n\n// Context\nexport const ActiveTask = React.createContext(false)\n\nexport default function SortableList({ newTaskCreated }) {\n    const [tasks, setTasks] = useState([]);\n    const [active, setActive] = useState(false);\n    const active_task = {active, setActive};\n    const isInitialMount = useRef(true);\n\n    // function lastToTop(values) {\n    //     var newValues = values;\n    //     console.log(newValues)\n    //     var topItem = newValues[-1];\n    //     console.log(topItem)\n    //     newValues.splice(-1,1);\n    //     newValues.unshift(topItem)\n    //     return newValues\n    // }\n\n    useEffect(() => {\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n        } else {\n\n            var hello = fetch('http://127.0.0.1:8000/api/task-list/')\n            .then(response => response.json())\n            .then(data => {\n                data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\n                setTasks(data);\n                }\n            );\n            var newTasks = [...tasks];\n            console.log(newTasks)\n            // console.log(lastToTop(newTasks))\n            // setTasks(lastToTop(tasks))\n        }\n\n    }, [newTaskCreated])\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/api/task-list/')\n        .then(response => response.json())\n        .then(data => {\n            data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\n            setTasks(data);\n            }\n        )\n        // return () => {\n        //     cleanup\n        // };\n    }, []);\n\n    const onSortEnd =  ({oldIndex, newIndex}) => {\n        var newOrder = [...tasks];\n        newOrder = arrayMove(newOrder, oldIndex, newIndex);\n                        \n        newOrder.forEach((task, index) => {\n            var url = 'http://127.0.0.1:8000/api/task-update/' + task.id + '/'\n            var csrf_token = getCookie('csrftoken');\n            task.order = index;\n            fetch(url, {\n                'method': 'POST',\n                'headers': {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrf_token,\n                },\n                'body': JSON.stringify(task)\n            })\n        })\n\n        setTasks(newOrder)\n\n    }\n\n    function deleteTask(e) {\n        var newTasks = tasks.filter(i => i.id !== e.id);\n        setTasks(newTasks);\n\n        var csrf_token = getCookie('csrftoken');\n        var url = 'http://127.0.0.1:8000/api/task-delete/' + e.id + '/';\n\n        fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrf_token,\n            }\n        })\n    }\n\n    function markTaskAsComplete(e) {\n        var index = tasks.findIndex(i => i.id === e.id)\n        var updates = [...tasks];\n        updates[index].completed = true;\n        console.log(updates[index])\n        setTasks(updates)\n\n        console.log(tasks[index])\n    }\n\n\n    function focusTask(taskIndex) {\n        var focusTask = tasks[taskIndex];\n        var newOrder = tasks;\n        newOrder.splice(taskIndex, 1);\n        newOrder.unshift(focusTask);\n\n        setTasks(newOrder);\n\n    };\n\n    return (\n        <>\n        <ActiveTask.Provider value={active_task}>\n            <SortableComponent items={tasks} onSortEnd={onSortEnd} onFocusTask={focusTask} onDeleteTask={deleteTask} onFinishedTask={markTaskAsComplete}/>\n        </ActiveTask.Provider>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}