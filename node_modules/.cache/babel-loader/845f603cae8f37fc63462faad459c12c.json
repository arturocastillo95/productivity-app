{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Form.js\";\nimport React, { useState } from 'react';\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nDate.prototype.addDays = function (days) {\n  var date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nexport default function Form({\n  onTaskCreated,\n  onCancelCreate,\n  onSampleTasks\n}) {\n  const [value, setValue] = useState({\n    'title': '',\n    'duration': 1800,\n    'remaining': 1800\n  });\n\n  function dateToStr(date) {\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var year = date.getFullYear();\n    var today = year + '-' + mm + '-' + dd;\n    return today;\n  }\n\n  function dataHeaders() {\n    var today = new Date();\n    var arr = [today];\n    var i;\n\n    for (i = -1; i > -8; i--) {\n      var current = today;\n      arr.unshift(current.addDays(i));\n    }\n\n    ;\n    var headers = arr.map(d => dateToStr(d));\n    return headers;\n  } // Sample task function\n\n\n  function createSampleTasks() {\n    var dates = dataHeaders();\n    var dLen = dates.length;\n    var tasks = [];\n    var csrf_token = getCookie('csrftoken');\n    var i;\n\n    for (i = 0; i < 50; i++) {\n      //Random date in the last week\n      var rnd = Math.floor(Math.random() * dLen);\n      var obj = {\n        'title': 'Sample Task ' + i,\n        'completed': true,\n        'finish_date': dates[rnd]\n      };\n      tasks.push(obj);\n    }\n\n    tasks.forEach(t => {\n      fetch('http://127.0.0.1:8000/api/task-create/', {\n        'method': 'POST',\n        'headers': {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrf_token\n        },\n        'body': JSON.stringify(t)\n      });\n    });\n  }\n\n  const handleCreate = e => {\n    e.preventDefault();\n    if (!value.title) return;\n    var csrf_token = getCookie('csrftoken');\n    fetch('http://127.0.0.1:8000/api/task-create/', {\n      'method': 'POST',\n      'headers': {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrf_token\n      },\n      'body': JSON.stringify(value)\n    });\n    onTaskCreated(value);\n  };\n\n  function setTaskName(name) {\n    value.title = name;\n    setValue(value);\n  }\n\n  function setTaskDuration(duration) {\n    switch (duration) {\n      default:\n        value.duration = value.remaining = 1800;\n        setValue(value);\n        break;\n\n      case 'Medium (1 hr)':\n        value.duration = value.remaining = 3600;\n        setValue(value);\n        break;\n\n      case 'Long (2 hrs)':\n        value.duration = value.remaining = 7200;\n        setValue(value);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-3 has-text-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Create New Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, \"Task Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Get stuff done!\",\n    type: \"text\",\n    className: \"input\" // value={value.name}\n    ,\n    onChange: e => setTaskName(e.target.value),\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field pb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Task duration\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control has-icons-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    onChange: e => setTaskDuration(e.target.value),\n    defaultValue: 'Short (30 min)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, \"Short (30 min)\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Medium (1 hr)\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, \"Long (2 hrs)\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon is-small is-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-stopwatch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button is-success is-fullwidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, \"Create Task\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-danger is-fullwidth mt-3\",\n    onClick: onCancelCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-info is-fullwidth mt-3\",\n    onClick: createSampleTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-vial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Generate Sample Tasks\")));\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Form.js"],"names":["React","useState","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Date","prototype","addDays","days","date","valueOf","setDate","getDate","Form","onTaskCreated","onCancelCreate","onSampleTasks","value","setValue","dateToStr","dd","String","padStart","mm","getMonth","year","getFullYear","today","dataHeaders","arr","current","unshift","headers","map","d","createSampleTasks","dates","dLen","tasks","csrf_token","rnd","Math","floor","random","obj","push","forEach","t","fetch","JSON","stringify","handleCreate","e","preventDefault","title","setTaskName","setTaskDuration","duration","remaining","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nDate.prototype.addDays = function(days) {\n    var date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n}\n\nexport default function Form({ onTaskCreated, onCancelCreate, onSampleTasks }) {\n    const [value, setValue] = useState({'title': '', 'duration': 1800, 'remaining': 1800});\n\n    function dateToStr(date) {\n        var dd = String(date.getDate()).padStart(2,'0');\n        var mm = String(date.getMonth() + 1).padStart(2,'0');\n        var year = date.getFullYear();\n\n        var today = year + '-' + mm + '-' + dd;\n        return today;\n    }\n\n\n    function dataHeaders() {\n        var today = new Date();\n        var arr = [today];\n        var i;\n        for (i = -1; i > -8; i--) {\n            var current = today;\n            arr.unshift(current.addDays(i));\n        };\n        var headers = arr.map(d => dateToStr(d))\n        return headers;\n    }\n\n    // Sample task function\n    function createSampleTasks() {\n        var dates = dataHeaders();\n        var dLen = dates.length;\n        var tasks = [];\n        var csrf_token = getCookie('csrftoken');\n        var i;\n\n        for (i = 0; i < 50; i++) {\n            //Random date in the last week\n            var rnd = Math.floor(Math.random() * dLen);\n            var obj = {'title': 'Sample Task ' + i, 'completed': true, 'finish_date': dates[rnd]};\n            tasks.push(obj);\n        }\n        \n        tasks.forEach(t => {\n            fetch('http://127.0.0.1:8000/api/task-create/', {\n                'method': 'POST',\n                'headers': {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrf_token,\n                },\n                'body': JSON.stringify(t)\n            });\n        });\n\n    }\n\n    const handleCreate = e => {\n        e.preventDefault();\n        if (!value.title) return;\n        \n        var csrf_token = getCookie('csrftoken');\n\n        fetch('http://127.0.0.1:8000/api/task-create/', {\n            'method': 'POST',\n            'headers': {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrf_token,\n            },\n            'body': JSON.stringify(value)\n        });\n        onTaskCreated(value);\n    }\n\n    function setTaskName(name) {\n        value.title = name;\n        setValue(value);\n    }\n\n    function setTaskDuration(duration) {\n        switch(duration) {\n            default:\n                value.duration = value.remaining = 1800;\n                setValue(value);\n                break;\n            case 'Medium (1 hr)':\n                value.duration = value.remaining = 3600;\n                setValue(value);\n                break;\n            case 'Long (2 hrs)':\n                value.duration = value.remaining = 7200;\n                setValue(value);\n                break;\n        }\n    }\n\n    return (\n        <>\n        <form onSubmit={ handleCreate }>\n\n            <h1 className=\"title is-3 has-text-centered\">\n                Create New Task\n            </h1>\n\n            <div className=\"field\">\n                <label className='label'>Task Name</label>\n                <div className=\"control is-expanded\">\n                    <input\n                        placeholder='Get stuff done!'\n                        type=\"text\" \n                        className=\"input\" \n                        // value={value.name}\n                        onChange={e => setTaskName(e.target.value)}\n                        autoFocus\n                    />\n                </div>\n            </div>\n\n            <div className=\"field pb-3\">\n                <label className=\"label\">Task duration</label>\n                <div className=\"control has-icons-left\">\n                    <div className=\"select\">\n                        <select onChange={e => setTaskDuration(e.target.value)} defaultValue={'Short (30 min)'}> \n        \n                        <option>\n                            Short (30 min)\n                        </option>\n                        <option>\n                            Medium (1 hr)\n                        </option>\n                        <option>\n                            Long (2 hrs)\n                        </option>\n                        {/* <option>\n                            Custom (Max. 2hrs)\n                        </option> */}\n        \n                        </select>\n                    </div>\n                    <div className=\"icon is-small is-left\">\n                        <i className=\"fas fa-stopwatch\"></i>\n                    </div>\n                </div>\n            </div>\n\n            <button type='submit' className='button is-success is-fullwidth'>\n                <span className=\"icon\">\n                    <i className=\"fas fa-check\"></i>\n                </span>\n                <span className='has-text-weight-bold'>Create Task</span>\n            </button>\n\n        </form>\n\n            <button className='button is-danger is-fullwidth mt-3' onClick={onCancelCreate}>\n                <span className=\"icon\">\n                    <i className=\"fas fa-times\"></i>\n                </span>\n                <span className='has-text-weight-bold'>Cancel</span>\n            </button>\n            <button className='button is-info is-fullwidth mt-3' onClick={createSampleTasks}>\n                <span className=\"icon\">\n                    <i className=\"fas fa-vial\"></i>\n                </span>\n                <span className='has-text-weight-bold'>Generate Sample Tasks</span>\n            </button>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}