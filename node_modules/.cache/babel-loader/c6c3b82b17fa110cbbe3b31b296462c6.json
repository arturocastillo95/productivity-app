{"ast":null,"code":"export function getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\nexport function fancyTimeFormat(duration) {\n  // Hours, minutes and seconds\n  var hrs = ~~(duration / 3600);\n  var mins = ~~(duration % 3600 / 60);\n  var secs = ~~duration % 60; // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n\n  var ret = \"\";\n\n  if (hrs > 0) {\n    ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n  }\n\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n  ret += \"\" + secs;\n  return ret;\n}\n\nDate.prototype.addDays = function (days) {\n  var date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nexport function dateToStr(date) {\n  var dd = String(date.getDate()).padStart(2, '0');\n  var mm = String(date.getMonth() + 1).padStart(2, '0');\n  var year = date.getFullYear();\n  var today = year + '-' + mm + '-' + dd;\n  return today;\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/utils.js"],"names":["getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fancyTimeFormat","duration","hrs","mins","secs","ret","Date","prototype","addDays","days","date","valueOf","setDate","getDate","dateToStr","dd","String","padStart","mm","getMonth","year","getFullYear","today"],"mappings":"AAAA,OAAO,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAC5B,MAAIC,WAAW,GAAG,IAAlB;;AACA,MAAIC,QAAQ,CAACC,MAAT,IAAmBD,QAAQ,CAACC,MAAT,KAAoB,EAA3C,EAA+C;AAC3C,UAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,CAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,YAAMH,MAAM,GAAGC,OAAO,CAACE,CAAD,CAAP,CAAWE,IAAX,EAAf,CADqC,CAErC;;AACA,UAAIL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAoBT,IAAI,CAACO,MAAL,GAAc,CAAlC,MAA0CP,IAAI,GAAG,GAArD,EAA2D;AACvDC,QAAAA,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAP,CAAiBT,IAAI,CAACO,MAAL,GAAc,CAA/B,CAAD,CAAhC;AACA;AACH;AACJ;AACJ;;AACD,SAAON,WAAP;AACH;AAED,OAAO,SAASU,eAAT,CAAyBC,QAAzB,EACP;AACI;AACA,MAAIC,GAAG,GAAG,CAAC,EAAED,QAAQ,GAAG,IAAb,CAAX;AACA,MAAIE,IAAI,GAAG,CAAC,EAAGF,QAAQ,GAAG,IAAZ,GAAoB,EAAtB,CAAZ;AACA,MAAIG,IAAI,GAAG,CAAC,CAACH,QAAF,GAAa,EAAxB,CAJJ,CAMI;;AACA,MAAII,GAAG,GAAG,EAAV;;AAEA,MAAIH,GAAG,GAAG,CAAV,EAAa;AACTG,IAAAA,GAAG,IAAI,KAAKH,GAAL,GAAW,GAAX,IAAkBC,IAAI,GAAG,EAAP,GAAY,GAAZ,GAAkB,EAApC,CAAP;AACH;;AAEDE,EAAAA,GAAG,IAAI,KAAKF,IAAL,GAAY,GAAZ,IAAmBC,IAAI,GAAG,EAAP,GAAY,GAAZ,GAAkB,EAArC,CAAP;AACAC,EAAAA,GAAG,IAAI,KAAKD,IAAZ;AACA,SAAOC,GAAP;AACH;;AAEDC,IAAI,CAACC,SAAL,CAAeC,OAAf,GAAyB,UAASC,IAAT,EAAe;AACpC,MAAIC,IAAI,GAAG,IAAIJ,IAAJ,CAAS,KAAKK,OAAL,EAAT,CAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBJ,IAA9B;AACA,SAAOC,IAAP;AACH,CAJD;;AAMA,OAAO,SAASI,SAAT,CAAmBJ,IAAnB,EAAyB;AAC5B,MAAIK,EAAE,GAAGC,MAAM,CAACN,IAAI,CAACG,OAAL,EAAD,CAAN,CAAuBI,QAAvB,CAAgC,CAAhC,EAAkC,GAAlC,CAAT;AACA,MAAIC,EAAE,GAAGF,MAAM,CAACN,IAAI,CAACS,QAAL,KAAkB,CAAnB,CAAN,CAA4BF,QAA5B,CAAqC,CAArC,EAAuC,GAAvC,CAAT;AACA,MAAIG,IAAI,GAAGV,IAAI,CAACW,WAAL,EAAX;AAEA,MAAIC,KAAK,GAAGF,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBH,EAApC;AACA,SAAOO,KAAP;AACH","sourcesContent":["export function getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function fancyTimeFormat(duration)\n{   \n    // Hours, minutes and seconds\n    var hrs = ~~(duration / 3600);\n    var mins = ~~((duration % 3600) / 60);\n    var secs = ~~duration % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n\n    if (hrs > 0) {\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n}\n\nDate.prototype.addDays = function(days) {\n    var date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n}\n\nexport function dateToStr(date) {\n    var dd = String(date.getDate()).padStart(2,'0');\n    var mm = String(date.getMonth() + 1).padStart(2,'0');\n    var year = date.getFullYear();\n\n    var today = year + '-' + mm + '-' + dd;\n    return today;\n}\n"]},"metadata":{},"sourceType":"module"}