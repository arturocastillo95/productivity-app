{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nfunction getCookie(name) {\n  let cookieValue = null;\n\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim(); // Does this cookie string begin with the name we want?\n\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n\n  return cookieValue;\n}\n\nfunction fancyTimeFormat(duration) {\n  // Hours, minutes and seconds\n  var hrs = ~~(duration / 3600);\n  var mins = ~~(duration % 3600 / 60);\n  var secs = ~~duration % 60; // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n\n  var ret = \"\";\n\n  if (hrs > 0) {\n    ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n  }\n\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n  ret += \"\" + secs;\n  return ret;\n}\n\nconst Timer = ({\n  seconds,\n  onTimeUpdate\n}) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n  useEffect(() => {\n    // exit early when we reach 0\n    if (!timeLeft) return; // save intervalId to clear the interval when the\n    // component re-renders\n\n    const intervalId = setInterval(() => {\n      if (timeLeft > 0) {\n        setTimeLeft(timeLeft - 1);\n        onTimeUpdate(timeLeft);\n      }\n    }, 1000); // clear interval on re-render to avoid memory leaks\n\n    return () => clearInterval(intervalId); // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n  useEffect(() => {\n    setTimeLeft(seconds);\n  }, [seconds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, fancyTimeFormat(timeLeft)));\n};\n\nconst StartTimer = ({\n  value,\n  onTimerStart,\n  onTimerPause\n}) => {\n  const [timer, setTimer] = useState({\n    'state': 'paused',\n    'seconds': '0'\n  });\n  const {\n    active,\n    setActive\n  } = useContext(ActiveTask);\n\n  function startTimer() {\n    setTimer({\n      'state': 'running',\n      'seconds': value.remaining\n    });\n    setActive(true);\n    onTimerStart();\n  }\n\n  function pauseTimer() {\n    setTimer({\n      'state': 'paused',\n      'seconds': '0'\n    });\n    setActive(false);\n    onTimerPause();\n  }\n\n  function timeUpdate(s) {\n    var url = 'http://127.0.0.1:8000/api/task-update/' + value.id + '/';\n    var csrf_token = getCookie('csrftoken');\n    var new_remaining = value;\n    new_remaining.remaining = s;\n    fetch(url, {\n      'method': 'POST',\n      'headers': {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrf_token\n      },\n      'body': JSON.stringify(value)\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, timer.state === 'paused' && active === false && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }))), timer.state === 'running' && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    onClick: pauseTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }))), timer.state === 'running' && /*#__PURE__*/React.createElement(Timer, {\n    seconds: timer.seconds,\n    onTimeUpdate: timeUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst SortableItem = SortableElement(({\n  value,\n  onActivateTask,\n  onDeleteTask\n}) => {\n  const [active_style, setActiveStyle] = useState(false);\n\n  function timerStarted() {\n    onActivateTask(value.id);\n    setActiveStyle(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"box \" + (active_style ? 'task-is-active' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level is-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, value.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StartTimer, {\n    value: value,\n    onTimerStart: timerStarted,\n    onTimerPause: () => setActiveStyle(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: e => onDeleteTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-lg fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 33\n    }\n  })))))));\n});\nconst SortableComponent = SortableContainer(({\n  items,\n  onFocusTask,\n  onDeleteTask\n}) => {\n  function setActiveTask(taskId) {\n    var index = items.findIndex(i => i.id === taskId);\n    onFocusTask(index);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, items.map((value, index) => /*#__PURE__*/React.createElement(SortableItem, {\n    key: value.id,\n    index: index,\n    value: value,\n    onActivateTask: setActiveTask,\n    onDeleteTask: onDeleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  })));\n}); // Context\n\nexport const ActiveTask = React.createContext(false);\nexport default function SortableList({\n  refreshList\n}) {\n  const [tasks, setTasks] = useState([]);\n  const [active, setActive] = useState(false);\n  const active_task = {\n    active,\n    setActive\n  };\n  useEffect(() => {\n    fetch('http://127.0.0.1:8000/api/task-list/').then(response => response.json()).then(data => {\n      data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n\n      if (refreshList.title) {\n        var current_index = data.findIndex(i => i.title === refreshList.title && i.remaining === refreshList.remaining);\n        data = arrayMove(data, current_index, 0);\n      }\n\n      setTasks(data);\n    }); // return () => {\n    //     cleanup\n    // };\n  }, [refreshList]);\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    var newOrder = [...tasks];\n    newOrder = arrayMove(newOrder, oldIndex, newIndex);\n    newOrder.forEach((task, index) => {\n      var url = 'http://127.0.0.1:8000/api/task-update/' + task.id + '/';\n      var csrf_token = getCookie('csrftoken');\n      task.order = index;\n      fetch(url, {\n        'method': 'POST',\n        'headers': {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrf_token\n        },\n        'body': JSON.stringify(task)\n      });\n    });\n    setTasks(newOrder);\n  };\n\n  function deleteTask(e) {\n    console.log('delete task ' + e.id); // var csrf_token = getCookie('csrftoken');\n    // url = 'http://127.0.0.1:8000/api/task-delete/' + e.id + '/'\n    // fetch(url, {\n    //     method: 'DELETE',\n    //     headers: {\n    //         'Content-Type': 'application/json',\n    //         'X-CSRFToken': csrf_token,\n    //     }\n    // })\n  }\n\n  function focusTask(taskIndex) {\n    var focusTask = tasks[taskIndex];\n    var newOrder = tasks;\n    newOrder.splice(taskIndex, 1);\n    newOrder.unshift(focusTask);\n    setTasks(newOrder);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ActiveTask.Provider, {\n    value: active_task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SortableComponent, {\n    items: tasks,\n    onSortEnd: onSortEnd,\n    onFocusTask: focusTask,\n    onDeleteTask: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js"],"names":["React","useState","useEffect","useContext","SortableContainer","SortableElement","arrayMove","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","fancyTimeFormat","duration","hrs","mins","secs","ret","Timer","seconds","onTimeUpdate","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","StartTimer","value","onTimerStart","onTimerPause","timer","setTimer","active","setActive","ActiveTask","startTimer","remaining","pauseTimer","timeUpdate","s","url","id","csrf_token","new_remaining","fetch","JSON","stringify","state","SortableItem","onActivateTask","onDeleteTask","active_style","setActiveStyle","timerStarted","title","e","SortableComponent","items","onFocusTask","setActiveTask","taskId","index","findIndex","map","createContext","SortableList","refreshList","tasks","setTasks","active_task","then","response","json","data","sort","a","b","order","current_index","onSortEnd","oldIndex","newIndex","newOrder","forEach","task","deleteTask","console","log","focusTask","taskIndex","splice","unshift"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nfunction fancyTimeFormat(duration)\n{   \n    // Hours, minutes and seconds\n    var hrs = ~~(duration / 3600);\n    var mins = ~~((duration % 3600) / 60);\n    var secs = ~~duration % 60;\n\n    // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n    var ret = \"\";\n\n    if (hrs > 0) {\n        ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n    }\n\n    ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n    ret += \"\" + secs;\n    return ret;\n}\n\nconst Timer = ({ seconds, onTimeUpdate }) => {\n    // initialize timeLeft with the seconds prop\n    const [timeLeft, setTimeLeft] = useState(seconds);\n  \n    useEffect(() => {\n      // exit early when we reach 0\n        if (!timeLeft) return;\n\n      // save intervalId to clear the interval when the\n      // component re-renders\n        const intervalId = setInterval(() => {\n        if (timeLeft > 0) {\n            setTimeLeft(timeLeft - 1);\n            onTimeUpdate(timeLeft)\n        }\n        }, 1000);\n  \n      // clear interval on re-render to avoid memory leaks\n        return () => clearInterval(intervalId);\n      // add timeLeft as a dependency to re-rerun the effect\n      // when we update it\n    }, [timeLeft]);\n\n    useEffect(() => {\n        setTimeLeft(seconds)\n    }, [seconds])\n\n    return (\n    <div>\n        <h1 className='has-text-success'>{fancyTimeFormat(timeLeft)}</h1>\n    </div>\n    );\n    };\n\n\n\nconst StartTimer = ({ value, onTimerStart, onTimerPause }) => {\n\n    const [timer, setTimer] = useState({'state': 'paused', 'seconds': '0'});\n    const {active, setActive} = useContext(ActiveTask);\n\n    function startTimer() {\n        setTimer({'state': 'running', 'seconds': value.remaining});\n        setActive(true);\n        onTimerStart();\n    }\n\n    function pauseTimer() {\n        setTimer({'state': 'paused', 'seconds': '0'});\n        setActive(false);\n        onTimerPause();\n    }\n\n    function timeUpdate(s) {\n        var url = 'http://127.0.0.1:8000/api/task-update/' + value.id + '/';\n        var csrf_token = getCookie('csrftoken');\n\n        var new_remaining = value\n        new_remaining.remaining = s\n\n        fetch(url, {\n            'method': 'POST',\n            'headers': {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrf_token,\n            },\n            'body': JSON.stringify(value)\n            });\n\n        }\n    \n    \n    return (\n        <div className=\"level-item\">\n\n            {timer.state === 'paused' && active === false &&\n            <a href=\"/#\" onClick={startTimer}>\n                <span className=\"icon has-text-success\">\n                    <i className=\"fas fa-play\"></i>\n                </span>\n            </a>\n            }\n            \n            {timer.state === 'running' &&\n            <a href=\"/#\" onClick={pauseTimer}>\n                <span className=\"icon has-text-success\">\n                    <i className=\"fas fa-pause\"></i>\n                </span>\n            </a>\n            }\n\n            {timer.state === 'running' && \n            <Timer seconds={timer.seconds} onTimeUpdate={timeUpdate}/>\n            }\n\n        </div>\n    )\n}\n\n\n\nconst SortableItem = SortableElement(({value, onActivateTask, onDeleteTask}) => {\n    const [active_style, setActiveStyle] = useState(false)\n\n    function timerStarted() {\n        onActivateTask(value.id);\n        setActiveStyle(true);\n    }\n\n    return (\n        <li className={\"box \" + (active_style ? 'task-is-active': '')}>\n            <div className=\"level is-mobile\">\n                <div className=\"level-left\">\n                    <input type=\"checkbox\"/>\n                </div>\n\n                <div className=\"level-item\">\n                    <h1 className=\"title is-5\">\n                        {value.title}\n                    </h1>\n                </div>\n\n                <div className=\"level-right\">\n\n                    <StartTimer value={value} onTimerStart={timerStarted} onTimerPause={() => setActiveStyle(false)}/>\n\n                    <div className=\"level-item\">\n                        <a href=\"#/\">\n                            <span className=\"icon has-text-warning\">\n                                <i className=\"fas fa-edit\"></i>\n                            </span>\n                        </a>\n                    </div>\n\n                    <div className=\"level-item\">\n                        <a href=\"#/\" onClick={e => onDeleteTask(value)}>\n                            <span className=\"icon has-text-danger\">\n                                <i className=\"fas fa-lg fa-times\"></i>\n                            </span>\n                        </a>\n                    </div>\n\n                </div>\n\n            </div>\n        </li>\n    )\n});\n\nconst SortableComponent = SortableContainer(({items, onFocusTask, onDeleteTask}) => {\n\n    function setActiveTask(taskId) {\n        var index = items.findIndex(i => i.id === taskId);\n        onFocusTask(index);\n    }\n\n    return (\n    <ul>\n        {items.map((value, index) => (\n          <SortableItem key={value.id} index={index} value={value} onActivateTask={setActiveTask} onDeleteTask={onDeleteTask}/>\n        ))}\n      </ul>\n    )\n})\n\n\n// Context\nexport const ActiveTask = React.createContext(false)\n\nexport default function SortableList({ refreshList }) {\n    const [tasks, setTasks] = useState([]);\n    const [active, setActive] = useState(false);\n    const active_task = {active, setActive};\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:8000/api/task-list/')\n        .then(response => response.json())\n        .then(data => {\n            data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\n            if (refreshList.title) {\n                var current_index = data.findIndex(i => i.title === refreshList.title && i.remaining === refreshList.remaining);\n                data = arrayMove(data, current_index, 0);\n            }\n            setTasks(data);\n            }\n        )\n        // return () => {\n        //     cleanup\n        // };\n    }, [refreshList]);\n\n    const onSortEnd =  ({oldIndex, newIndex}) => {\n        var newOrder = [...tasks];\n        newOrder = arrayMove(newOrder, oldIndex, newIndex);\n                        \n        newOrder.forEach((task, index) => {\n            var url = 'http://127.0.0.1:8000/api/task-update/' + task.id + '/'\n            var csrf_token = getCookie('csrftoken');\n            task.order = index;\n\n            fetch(url, {\n                'method': 'POST',\n                'headers': {\n                    'Content-Type': 'application/json',\n                    'X-CSRFToken': csrf_token,\n                },\n                'body': JSON.stringify(task)\n            })\n\n\n        })\n\n        setTasks(newOrder)\n\n    }\n\n    function deleteTask(e) {\n        console.log('delete task ' + e.id)\n        // var csrf_token = getCookie('csrftoken');\n        // url = 'http://127.0.0.1:8000/api/task-delete/' + e.id + '/'\n\n        // fetch(url, {\n        //     method: 'DELETE',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         'X-CSRFToken': csrf_token,\n        //     }\n        // })\n    }\n\n\n    function focusTask(taskIndex) {\n        var focusTask = tasks[taskIndex];\n        var newOrder = tasks;\n        newOrder.splice(taskIndex, 1);\n        newOrder.unshift(focusTask);\n\n        setTasks(newOrder)\n\n    }\n\n    return (\n        <>\n        <ActiveTask.Provider value={active_task}>\n            <SortableComponent items={tasks} onSortEnd={onSortEnd} onFocusTask={focusTask} onDeleteTask={deleteTask}/>\n        </ActiveTask.Provider>\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}