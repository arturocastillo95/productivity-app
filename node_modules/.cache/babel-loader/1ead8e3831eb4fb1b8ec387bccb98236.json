{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { getCookie, taskUpdate } from './utils';\nimport { StartTimer } from './Timer';\nconst SortableItem = SortableElement(({\n  value,\n  onActivateTask,\n  onDeleteTask,\n  onFinishedTask,\n  onEditTask\n}) => {\n  const [active_style, setActiveStyle] = useState(false);\n\n  function timerStarted() {\n    onActivateTask(value.id);\n    setActiveStyle(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"box \" + (active_style ? 'task-is-active' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level is-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \" \" + (value.completed ? 'is-hidden' : ''),\n    type: \"checkbox\",\n    onChange: () => onFinishedTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-5 \" + (value.completed ? 'is-completed' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, value.title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StartTimer, {\n    value: value,\n    onTimerStart: timerStarted,\n    onTimerPause: () => setActiveStyle(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item \" + (value.completed ? 'is-hidden' : ''),\n    onClick: e => onEditTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: e => onDeleteTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-lg fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  })))))));\n});\nconst SortableComponent = SortableContainer(({\n  items,\n  onFocusTask,\n  onDeleteTask,\n  onFinishedTask,\n  onEditTask\n}) => {\n  function setActiveTask(taskId) {\n    var index = items.findIndex(i => i.id === taskId);\n    onFocusTask(index);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, items.map((value, index) => /*#__PURE__*/React.createElement(SortableItem, {\n    key: value.id,\n    index: index,\n    value: value,\n    onActivateTask: setActiveTask,\n    onDeleteTask: onDeleteTask,\n    onFinishedTask: onFinishedTask,\n    onEditTask: onEditTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })));\n}); // Context for setting active tasks\n\nexport const ActiveTask = React.createContext(false);\nexport default function SortableList({\n  newTaskCreated,\n  completedTasksList,\n  onEditTask,\n  onUpdateTasks\n}) {\n  const [tasks, setTasks] = useState([]);\n  const [active, setActive] = useState(false); // const active_task = {active, setActive};\n\n  const isInitialMount = useRef(true);\n  const [isLoading, setLoading] = useState(true);\n  console.log(onUpdateTasks);\n\n  var fetchTasks = async () => {\n    const url = 'http://127.0.0.1:8000/api/task-list/' + (completedTasksList ? 'completed/' : 'active/');\n\n    try {\n      const response = await fetch(url);\n      return response.ok ? response.json() : null;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  };\n\n  function updateIndex(data) {\n    var csrf_token = getCookie('csrftoken');\n    data.forEach((task, index) => {\n      task.order = index;\n      taskUpdate(task, csrf_token);\n    });\n  }\n\n  ; //Update list when new task is created\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      fetchTasks().then(data => {\n        data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n        var index = data.findIndex(i => i.title === newTaskCreated.title);\n        data = arrayMove(data, index, 0);\n        data.forEach((value, i) => {\n          value.order = i;\n        });\n        setTasks(data);\n        updateIndex(data);\n      });\n    }\n  }, [newTaskCreated]);\n  useEffect(() => {\n    fetchTasks().then(data => {\n      data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n      setTasks(data);\n      setLoading(false);\n      console.log(onUpdateTasks);\n    });\n  }, []);\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    var newOrder = [...tasks];\n    newOrder = arrayMove(newOrder, oldIndex, newIndex);\n    updateIndex(newOrder);\n    setTasks(newOrder);\n  };\n\n  function deleteTask(e) {\n    var newTasks = tasks.filter(i => i.id !== e.id);\n    setTasks(newTasks);\n    var csrf_token = getCookie('csrftoken');\n    var url = 'http://127.0.0.1:8000/api/task-delete/' + e.id + '/';\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrf_token\n      }\n    });\n  }\n\n  function getCurrentDate() {\n    var date = new Date();\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var year = date.getFullYear();\n    var today = year + '-' + mm + '-' + dd;\n    return today;\n  }\n\n  function markTaskAsComplete(e) {\n    var index = tasks.findIndex(i => i.id === e.id);\n    var updates = [...tasks];\n    updates[index].completed = true;\n    updates[index].finish_date = getCurrentDate();\n    var csrf_token = getCookie('csrftoken');\n    setTasks(updates);\n    taskUpdate(updates[index], csrf_token);\n  }\n\n  function focusTask(taskIndex) {\n    var newOrder = arrayMove(tasks, taskIndex, 0);\n    setTasks(newOrder);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lds-ellipsis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 72\n    }\n  })), isLoading === false && /*#__PURE__*/React.createElement(ActiveTask.Provider, {\n    value: active_task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SortableComponent, {\n    items: tasks,\n    onSortEnd: onSortEnd,\n    onFocusTask: focusTask,\n    onDeleteTask: deleteTask,\n    onFinishedTask: markTaskAsComplete,\n    onEditTask: onEditTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js"],"names":["React","useState","useEffect","useRef","SortableContainer","SortableElement","arrayMove","getCookie","taskUpdate","StartTimer","SortableItem","value","onActivateTask","onDeleteTask","onFinishedTask","onEditTask","active_style","setActiveStyle","timerStarted","id","completed","title","e","SortableComponent","items","onFocusTask","setActiveTask","taskId","index","findIndex","i","map","ActiveTask","createContext","SortableList","newTaskCreated","completedTasksList","onUpdateTasks","tasks","setTasks","active","setActive","isInitialMount","isLoading","setLoading","console","log","fetchTasks","url","response","fetch","ok","json","error","updateIndex","data","csrf_token","forEach","task","order","current","then","sort","a","b","onSortEnd","oldIndex","newIndex","newOrder","deleteTask","newTasks","filter","method","headers","getCurrentDate","date","Date","dd","String","getDate","padStart","mm","getMonth","year","getFullYear","today","markTaskAsComplete","updates","finish_date","focusTask","taskIndex","active_task"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport {getCookie, taskUpdate} from './utils'\nimport {StartTimer} from './Timer'\n\nconst SortableItem = SortableElement(({value, onActivateTask, onDeleteTask, onFinishedTask, onEditTask}) => {\n    const [active_style, setActiveStyle] = useState(false)\n\n    function timerStarted() {\n        onActivateTask(value.id);\n        setActiveStyle(true);\n    }\n\n    return (\n        <li className={\"box \" + (active_style ? 'task-is-active': '')}>\n            <div className=\"level is-mobile\">\n                <div className=\"level-left\">\n                    <input className={\" \" + (value.completed ? 'is-hidden' : '')} type=\"checkbox\" onChange={() => onFinishedTask(value)}/>\n                </div>\n\n                <div className=\"level-item\">\n                    <h1 className={\"title is-5 \" + (value.completed ? 'is-completed': '')}>\n                        {value.title}\n                    </h1>\n                </div>\n\n                <div className=\"level-right\">\n\n                    <StartTimer value={value} onTimerStart={timerStarted} onTimerPause={() => setActiveStyle(false)}/>\n\n                    <div className={\"level-item \" + (value.completed ? 'is-hidden': '')} onClick={e => onEditTask(value)}>\n                        <a href=\"#/\">\n                            <span className=\"icon has-text-warning\">\n                                <i className=\"fas fa-edit\"></i>\n                            </span>\n                        </a>\n                    </div>\n\n                    <div className=\"level-item\">\n                        <a href=\"#/\" onClick={e => onDeleteTask(value)}>\n                            <span className=\"icon has-text-danger\">\n                                <i className=\"fas fa-lg fa-times\"></i>\n                            </span>\n                        </a>\n                    </div>\n\n                </div>\n\n            </div>\n        </li>\n    )\n});\n\nconst SortableComponent = SortableContainer(({items, onFocusTask, onDeleteTask, onFinishedTask, onEditTask }) => {\n\n    function setActiveTask(taskId) {\n        var index = items.findIndex(i => i.id === taskId);\n        onFocusTask(index);\n    }\n\n    return (\n    <ul>\n        {items.map((value, index) => (\n            <SortableItem key={value.id} index={index} value={value} onActivateTask={setActiveTask} onDeleteTask={onDeleteTask} onFinishedTask={onFinishedTask} onEditTask={onEditTask}/>\n        ))}\n    </ul>\n    )\n})\n\n\n// Context for setting active tasks\nexport const ActiveTask = React.createContext(false)\n\nexport default function SortableList({ newTaskCreated, completedTasksList, onEditTask, onUpdateTasks }) {\n    const [tasks, setTasks] = useState([]);\n    const [active, setActive] = useState(false);\n    // const active_task = {active, setActive};\n    const isInitialMount = useRef(true);\n    const [isLoading, setLoading] = useState(true);\n    console.log(onUpdateTasks)\n\n    var fetchTasks = async () => {\n        const url = 'http://127.0.0.1:8000/api/task-list/' + (completedTasksList ? 'completed/' : 'active/')\n        try {\n            const response = await fetch(url);\n            return response.ok ? response.json() : null;\n        } catch (error) {\n            console.log(error);\n            return null;\n        }\n    }\n\n    function updateIndex(data) {\n        var csrf_token = getCookie('csrftoken');\n        \n        data.forEach((task, index) => {\n            task.order = index;\n            taskUpdate(task, csrf_token);\n        });\n    };\n\n    //Update list when new task is created\n    useEffect(() => {\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n        } else {\n            fetchTasks().then(data => {\n                data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\n                var index = data.findIndex(i => i.title === newTaskCreated.title);\n                data = arrayMove(data, index, 0);\n                data.forEach((value, i) => {\n                    value.order = i;\n                })\n                setTasks(data);\n                updateIndex(data);\n            })\n        }\n\n    }, [newTaskCreated])\n\n    useEffect(() => {\n        \n        fetchTasks()\n        .then(data => {\n            data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\n            setTasks(data);\n            setLoading(false);\n            console.log(onUpdateTasks)\n            }\n        );\n    }, []);\n\n    const onSortEnd =  ({oldIndex, newIndex}) => {\n        var newOrder = [...tasks];\n        newOrder = arrayMove(newOrder, oldIndex, newIndex);\n                        \n        updateIndex(newOrder);\n        setTasks(newOrder);\n\n    };\n\n    function deleteTask(e) {\n        var newTasks = tasks.filter(i => i.id !== e.id);\n        setTasks(newTasks);\n\n        var csrf_token = getCookie('csrftoken');\n        var url = 'http://127.0.0.1:8000/api/task-delete/' + e.id + '/';\n\n        fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrf_token,\n            }\n        })\n    }\n\n    function getCurrentDate() {\n        var date = new Date();\n        var dd = String(date.getDate()).padStart(2,'0');\n        var mm = String(date.getMonth() + 1).padStart(2,'0');\n        var year = date.getFullYear();\n\n        var today = year + '-' + mm + '-' + dd;\n        return today;\n    }\n\n    function markTaskAsComplete(e) {\n        var index = tasks.findIndex(i => i.id === e.id)\n        var updates = [...tasks];\n        updates[index].completed = true;\n        updates[index].finish_date = getCurrentDate();\n        var csrf_token = getCookie('csrftoken')\n\n        setTasks(updates);\n        taskUpdate(updates[index], csrf_token);\n    }\n\n    function focusTask(taskIndex) {\n        var newOrder = arrayMove(tasks, taskIndex, 0);\n        setTasks(newOrder)\n    };\n\n    return (\n        <>\n        \n        {isLoading === true && \n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        }\n\n        {isLoading === false && \n        <ActiveTask.Provider value={active_task}>\n            <SortableComponent items={tasks} onSortEnd={onSortEnd} onFocusTask={focusTask} onDeleteTask={deleteTask} onFinishedTask={markTaskAsComplete} onEditTask={onEditTask}/>\n        </ActiveTask.Provider>\n        }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}