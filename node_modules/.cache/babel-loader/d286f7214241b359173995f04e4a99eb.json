{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Chart.js\";\nimport arrayMove from 'array-move';\nimport React, { useState, useEffect } from 'react';\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\nDate.prototype.addDays = function (days) {\n  var date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nexport default function Chart() {\n  const [data, setData] = useState(null);\n\n  function dataHeaders() {\n    var today = new Date();\n\n    for (i = -1; i > -8; i--) {\n      var current = today;\n      console.log(current.addDays(i));\n    }\n  }\n\n  useEffect(() => {\n    const runCall = async () => {\n      let values = await fetchData();\n      const headers = values.map(h => Date(h.finish_date));\n      console.log(headers);\n    };\n\n    const fetchData = async () => {\n      const url = 'http://127.0.0.1:8000/api/task-list/';\n\n      try {\n        const response = await fetch(url);\n        return response.ok ? response.json() : null;\n      } catch (error) {\n        console.log(error);\n        return null;\n      }\n    };\n\n    console.log(dataHeaders());\n  }, []);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"hello\");\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Chart.js"],"names":["arrayMove","React","useState","useEffect","LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","Date","prototype","addDays","days","date","valueOf","setDate","getDate","Chart","data","setData","dataHeaders","today","i","current","console","log","runCall","values","fetchData","headers","map","h","finish_date","url","response","fetch","ok","json","error"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,KAAzC,EAAgDC,KAAhD,EAAuDC,OAAvD,QAAsE,UAAtE;;AAEAC,IAAI,CAACC,SAAL,CAAeC,OAAf,GAAyB,UAASC,IAAT,EAAe;AACpC,MAAIC,IAAI,GAAG,IAAIJ,IAAJ,CAAS,KAAKK,OAAL,EAAT,CAAX;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBJ,IAA9B;AACA,SAAOC,IAAP;AACH,CAJD;;AAMA,eAAe,SAASI,KAAT,GAAiB;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASmB,WAAT,GAAuB;AACnB,QAAIC,KAAK,GAAG,IAAIZ,IAAJ,EAAZ;;AAEA,SAAKa,CAAC,GAAG,CAAC,CAAV,EAAaA,CAAC,GAAG,CAAC,CAAlB,EAAqBA,CAAC,EAAtB,EAA0B;AACtB,UAAIC,OAAO,GAAGF,KAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACZ,OAAR,CAAgBW,CAAhB,CAAZ;AACH;AACJ;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMwB,OAAO,GAAG,YAAY;AACxB,UAAIC,MAAM,GAAG,MAAMC,SAAS,EAA5B;AACA,YAAMC,OAAO,GAAGF,MAAM,CAACG,GAAP,CAAWC,CAAC,IAAItB,IAAI,CAACsB,CAAC,CAACC,WAAH,CAApB,CAAhB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACH,KAJD;;AAMA,UAAMD,SAAS,GAAG,YAAY;AAC1B,YAAMK,GAAG,GAAG,sCAAZ;;AAEA,UAAI;AACA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,eAAOC,QAAQ,CAACE,EAAT,GAAcF,QAAQ,CAACG,IAAT,EAAd,GAAgC,IAAvC;AACH,OAHD,CAGE,OAAOC,KAAP,EAAc;AACZd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,eAAO,IAAP;AACH;AACJ,KAVD;;AAYAd,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAW,EAAvB;AAEH,GArBQ,EAqBN,EArBM,CAAT;AAuBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ;AAGH","sourcesContent":["import arrayMove from 'array-move';\nimport React, {useState, useEffect} from 'react'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\nDate.prototype.addDays = function(days) {\n    var date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n}\n\nexport default function Chart() {\n    const [data, setData] = useState(null);\n\n    function dataHeaders() {\n        var today = new Date();\n        \n        for (i = -1; i > -8; i--) {\n            var current = today;\n            console.log(current.addDays(i))\n        }\n    }\n\n    useEffect(() => {\n        const runCall = async () => {\n            let values = await fetchData();\n            const headers = values.map(h => Date(h.finish_date))\n            console.log(headers)\n        }\n\n        const fetchData = async () => {\n            const url = 'http://127.0.0.1:8000/api/task-list/'\n\n            try {\n                const response = await fetch(url);\n                return response.ok ? response.json() : null;\n            } catch (error) {\n                console.log(error);\n                return null;\n            }\n        }\n\n        console.log(dataHeaders())\n\n    }, [])\n\n    return (\n        <h1>hello</h1>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}