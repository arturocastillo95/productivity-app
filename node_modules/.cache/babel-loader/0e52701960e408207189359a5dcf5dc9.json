{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Timer.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { fancyTimeFormat, getCookie, taskUpdate } from './utils';\nimport { ActiveTask } from './SortableList';\n\nconst Timer = ({\n  seconds,\n  onTimeUpdate,\n  markAsComplete\n}) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n  useEffect(() => {\n    // exit early when we reach 0\n    if (!timeLeft) return; // save intervalId to clear the interval when the\n    // component re-renders\n\n    if (timeLeft === 0) {\n      markAsComplete();\n    }\n\n    const intervalId = setInterval(() => {\n      if (timeLeft >= 0) {\n        setTimeLeft(timeLeft - 1);\n        onTimeUpdate(timeLeft);\n      }\n    }, 1000); // clear interval on re-render to avoid memory leaks\n\n    return () => clearInterval(intervalId); // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n  useEffect(() => {\n    setTimeLeft(seconds);\n  }, [seconds]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, fancyTimeFormat(timeLeft)));\n};\n\nexport const StartTimer = ({\n  value,\n  onTimerStart,\n  onTimerPause,\n  markAsComplete\n}) => {\n  const [timer, setTimer] = useState({\n    'state': 'paused',\n    'seconds': '0'\n  });\n  const {\n    active,\n    setActive\n  } = useContext(ActiveTask);\n\n  function startTimer() {\n    setTimer({\n      'state': 'running',\n      'seconds': value.remaining\n    });\n    onTimerStart();\n    setActive(true);\n  }\n\n  function pauseTimer() {\n    setTimer({\n      'state': 'paused',\n      'seconds': '0'\n    });\n    setActive(false);\n    onTimerPause();\n  }\n\n  function timeUpdate(s) {\n    var csrf_token = getCookie('csrftoken');\n    var new_remaining = value;\n    new_remaining.remaining = s;\n    taskUpdate(new_remaining, csrf_token);\n  }\n\n  function resetTimer() {\n    setTimer({\n      'state': 'running',\n      'seconds': value.duration\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item \" + (value.completed ? 'is-hidden' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, timer.state === 'paused' && active === false && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    onClick: startTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-play\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }))), timer.state === 'running' && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    onClick: pauseTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-pause\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }))), timer.state === 'running' && /*#__PURE__*/React.createElement(Timer, {\n    seconds: timer.seconds,\n    onTimeUpdate: timeUpdate,\n    markAsComplete: markAsComplete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), timer.state === 'running' && /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-warning\",\n    onClick: resetTimer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, \"\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-redo-alt\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Timer.js"],"names":["React","useState","useEffect","useContext","fancyTimeFormat","getCookie","taskUpdate","ActiveTask","Timer","seconds","onTimeUpdate","markAsComplete","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval","StartTimer","value","onTimerStart","onTimerPause","timer","setTimer","active","setActive","startTimer","remaining","pauseTimer","timeUpdate","s","csrf_token","new_remaining","resetTimer","duration","completed","state"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport {fancyTimeFormat, getCookie, taskUpdate} from './utils'\nimport {ActiveTask} from './SortableList'\n\nconst Timer = ({ seconds, onTimeUpdate, markAsComplete }) => {\n    // initialize timeLeft with the seconds prop\n    const [timeLeft, setTimeLeft] = useState(seconds);\n  \n    useEffect(() => {\n      // exit early when we reach 0\n        if (!timeLeft) return;\n\n      // save intervalId to clear the interval when the\n      // component re-renders\n\n        if (timeLeft === 0) {\n            markAsComplete();\n        }\n\n        const intervalId = setInterval(() => {\n        if (timeLeft >= 0) {\n            setTimeLeft(timeLeft - 1);\n            onTimeUpdate(timeLeft)\n        }\n        }, 1000);\n  \n      // clear interval on re-render to avoid memory leaks\n        return () => clearInterval(intervalId);\n      // add timeLeft as a dependency to re-rerun the effect\n      // when we update it\n    }, [timeLeft]);\n\n    useEffect(() => {\n        setTimeLeft(seconds)\n    }, [seconds])\n\n    return (\n    <div>\n        <h1 className='has-text-success'>{fancyTimeFormat(timeLeft)}</h1>\n    </div>\n    );\n    };\n\nexport const StartTimer = ({ value, onTimerStart, onTimerPause, markAsComplete }) => {\n\n    const [timer, setTimer] = useState({'state': 'paused', 'seconds': '0'});\n    const {active, setActive} = useContext(ActiveTask);\n\n    function startTimer() {\n        setTimer({'state': 'running', 'seconds': value.remaining});\n        onTimerStart();\n        setActive(true);\n    }\n    \n    function pauseTimer() {\n        setTimer({'state': 'paused', 'seconds': '0'});\n        setActive(false);\n        onTimerPause();\n    }\n    \n    function timeUpdate(s) {\n        var csrf_token = getCookie('csrftoken');\n        \n        var new_remaining = value;\n        new_remaining.remaining = s;\n\n        taskUpdate(new_remaining, csrf_token)\n    }\n    \n    function resetTimer() {\n        setTimer({'state': 'running', 'seconds': value.duration});\n    }\n\n    return (\n        <div className={\"level-item \" + (value.completed ? 'is-hidden' : '')}>\n\n            {timer.state === 'paused' && active === false &&\n            <a href=\"/#\" onClick={startTimer}>\n                <span className=\"icon has-text-success\">\n                    <i className=\"fas fa-play\"></i>\n                </span>\n            </a>\n            }\n            \n            {timer.state === 'running' &&\n            <a href=\"/#\" onClick={pauseTimer}>\n                <span className=\"icon has-text-success\">\n                    <i className=\"fas fa-pause\"></i>\n                </span>\n            </a>\n            }\n\n            {timer.state === 'running' && \n            <Timer seconds={timer.seconds} onTimeUpdate={timeUpdate} markAsComplete={markAsComplete}/>\n            }\n\n            {timer.state === 'running' &&\n                <a href=\"/#\">\n                    <span className=\"icon has-text-warning\" onClick={resetTimer}>\n                        &nbsp;&nbsp;\n                        <i className=\"fas fa-redo-alt\"></i>\n                    </span>\n                </a>\n            }\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}