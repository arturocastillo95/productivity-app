{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Form.js\";\nimport React, { useState } from 'react';\nimport { getCookie, createSampleTasks } from './utils';\nimport { DurationSelector } from './DurationSelector';\nexport default function Form({\n  editValue,\n  onTaskCreated,\n  onCancelCreate,\n  onSampleTasks\n}) {\n  const [value, setValue] = useState(Object.keys(editValue).length === 0 ? {\n    'title': '',\n    'duration': 1800,\n    'remaining': 1800\n  } : editValue);\n  console.log(value);\n\n  const handleCreate = e => {\n    e.preventDefault();\n    if (!value.title) return;\n    var csrf_token = getCookie('csrftoken');\n    console.log(value);\n    fetch('http://127.0.0.1:8000/api/task-create/', {\n      'method': 'POST',\n      'headers': {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrf_token\n      },\n      'body': JSON.stringify(value)\n    });\n\n    if (!value.id) {\n      onTaskCreated(value);\n    }\n  };\n\n  function setTaskName(name) {\n    value.title = name;\n    setValue(value);\n  }\n\n  function setTaskDuration(duration) {\n    switch (duration) {\n      default:\n        value.duration = value.remaining = 1800;\n        setValue(value);\n        break;\n\n      case 'Medium (1 hr)':\n        value.duration = value.remaining = 3600;\n        setValue(value);\n        break;\n\n      case 'Long (2 hrs)':\n        value.duration = value.remaining = 7200;\n        setValue(value);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-3 has-text-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Create New Task\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Task Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control is-expanded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Get stuff done!\",\n    type: \"text\",\n    className: \"input\",\n    onChange: e => setTaskName(e.target.value),\n    defaultValue: value.title,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(DurationSelector, {\n    setTaskDuration: setTaskDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"button is-success is-fullwidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, value.id != null && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Save changes\"), value.title === '' && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, \"Create Task\")))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-danger is-fullwidth mt-3\",\n    onClick: onCancelCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), value.title === '' && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-info is-fullwidth mt-3\",\n    onClick: createSampleTasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-vial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"has-text-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Generate Sample Tasks\")));\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/Form.js"],"names":["React","useState","getCookie","createSampleTasks","DurationSelector","Form","editValue","onTaskCreated","onCancelCreate","onSampleTasks","value","setValue","Object","keys","length","console","log","handleCreate","e","preventDefault","title","csrf_token","fetch","JSON","stringify","id","setTaskName","name","setTaskDuration","duration","remaining","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {getCookie, createSampleTasks} from './utils'\nimport {DurationSelector} from './DurationSelector'\n\nexport default function Form({ editValue, onTaskCreated, onCancelCreate, onSampleTasks }) {\n    const [value, setValue] = useState((Object.keys(editValue).length === 0 ? {'title': '', 'duration': 1800, 'remaining': 1800} : editValue));\n    console.log(value)\n\n    const handleCreate = e => {\n        e.preventDefault();\n        if (!value.title) return;\n        \n        var csrf_token = getCookie('csrftoken');\n\n        console.log(value)\n\n        fetch('http://127.0.0.1:8000/api/task-create/', {\n            'method': 'POST',\n            'headers': {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrf_token,\n            },\n            'body': JSON.stringify(value)\n        });\n\n        if (!value.id) {\n            onTaskCreated(value);\n        }\n    }\n\n    function setTaskName(name) {\n        value.title = name;\n        setValue(value);\n    }\n\n    function setTaskDuration(duration) {\n        switch(duration) {\n            default:\n                value.duration = value.remaining = 1800;\n                setValue(value);\n                break;\n            case 'Medium (1 hr)':\n                value.duration = value.remaining = 3600;\n                setValue(value);\n                break;\n            case 'Long (2 hrs)':\n                value.duration = value.remaining = 7200;\n                setValue(value);\n                break;\n        }\n    }\n\n    return (\n        <>\n        <form onSubmit={ handleCreate }>\n\n            <h1 className=\"title is-3 has-text-centered\">\n                Create New Task\n            </h1>\n\n            <div className=\"field\">\n                <label className='label'>Task Name</label>\n                <div className=\"control is-expanded\">\n                    <input\n                        placeholder='Get stuff done!'\n                        type=\"text\" \n                        className=\"input\" \n                        onChange={e => setTaskName(e.target.value)}\n                        defaultValue={value.title}\n                        autoFocus\n                    />\n                </div>\n            </div>\n\n            <DurationSelector setTaskDuration={setTaskDuration}/>\n\n            <button type='submit' className='button is-success is-fullwidth'>\n                <span className=\"icon\">\n                    <i className=\"fas fa-check\"></i>\n                </span>\n                <span className='has-text-weight-bold'>\n                    {value.id != null &&\n                    <span>Save changes</span>\n                    }\n                    {value.title === '' &&\n                    <span>Create Task</span>\n                    }\n                </span>\n            </button>\n\n        </form>\n\n            <button className='button is-danger is-fullwidth mt-3' onClick={onCancelCreate}>\n                <span className=\"icon\">\n                    <i className=\"fas fa-times\"></i>\n                </span>\n                <span className='has-text-weight-bold'>Cancel</span>\n            </button>\n            {value.title === '' &&             \n            <button className='button is-info is-fullwidth mt-3' onClick={createSampleTasks}>\n                <span className=\"icon\">\n                    <i className=\"fas fa-vial\"></i>\n                </span>\n                <span className='has-text-weight-bold'>Generate Sample Tasks</span>\n            </button>\n            }\n\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}