{"ast":null,"code":"var _jsxFileName = \"/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport { getCookie, taskUpdate, fancyTimeFormat } from './utils';\nimport { StartTimer } from './Timer';\nimport { BASE_URL } from './../App';\nconst SortableItem = SortableElement(({\n  value,\n  onActivateTask,\n  onDeleteTask,\n  onFinishedTask,\n  onEditTask\n}) => {\n  const [active_style, setActiveStyle] = useState(false);\n\n  function timerStarted() {\n    onActivateTask(value.id);\n    setActiveStyle(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"box \" + (active_style ? 'task-is-active' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level is-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \" \" + (value.completed ? 'is-hidden' : ''),\n    type: \"checkbox\",\n    onChange: () => onFinishedTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title is-5 \" + (value.completed ? 'is-completed' : ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, value.title), active_style === false && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"is-help has-text-centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, fancyTimeFormat(value.remaining)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StartTimer, {\n    value: value,\n    onTimerStart: timerStarted,\n    onTimerPause: () => setActiveStyle(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), active_style === false && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item \" + (value.completed ? 'is-hidden' : ''),\n    onClick: e => onEditTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"level-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#/\",\n    onClick: e => onDeleteTask(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"icon has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-lg fa-times\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  })))))));\n});\nconst SortableComponent = SortableContainer(({\n  items,\n  onFocusTask,\n  onDeleteTask,\n  onFinishedTask,\n  onEditTask\n}) => {\n  function setActiveTask(taskId) {\n    var index = items.findIndex(i => i.id === taskId);\n    onFocusTask(index);\n  }\n\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, items.map((value, index) => /*#__PURE__*/React.createElement(SortableItem, {\n    key: value.id,\n    index: index,\n    value: value,\n    onActivateTask: setActiveTask,\n    onDeleteTask: onDeleteTask,\n    onFinishedTask: onFinishedTask,\n    onEditTask: onEditTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })));\n}); // Context for setting active tasks\n\nexport const ActiveTask = React.createContext(false);\nexport default function SortableList({\n  newTaskCreated,\n  completedTasksList,\n  onEditTask,\n  onUpdateTasks,\n  onSort\n}) {\n  const [tasks, setTasks] = useState([]);\n  const [active, setActive] = useState(false);\n  const active_task = {\n    active,\n    setActive\n  };\n  const isInitialMount = useRef(true);\n  const [isLoading, setLoading] = useState(true);\n\n  const fetchTasks = async () => {\n    const url = BASE_URL + 'api/task-list/' + (completedTasksList ? 'completed/' : 'active/');\n\n    try {\n      const response = await fetch(url);\n      return response.ok ? response.json() : null;\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  };\n\n  function updateIndex(data) {\n    var csrf_token = getCookie('csrftoken');\n    data.forEach((task, index) => {\n      task.order = index;\n      taskUpdate(task, csrf_token);\n    });\n  }\n\n  ;\n  useEffect(() => {\n    console.log('we sort');\n\n    switch (onSort) {\n      default:\n        break;\n\n      case 'longest':\n        let sorted = tasks.sort((a, b) => a.remaining > b.remaining ? 1 : b.remaining > a.remaining ? -1 : 0);\n        console.log(sorted);\n        setTasks(sorted);\n        break;\n    }\n  }, [onSort]); //Update list when new task is created\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      fetchTasks().then(data => {\n        data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n        var index = data.findIndex(i => i.title === newTaskCreated.title);\n        data = arrayMove(data, index, 0);\n        data.forEach((value, i) => {\n          value.order = i;\n        });\n        setTasks(data);\n        updateIndex(data);\n      });\n    }\n  }, [newTaskCreated]);\n  useEffect(() => {\n    fetchTasks().then(data => {\n      data.sort((a, b) => a.order > b.order ? 1 : b.order > a.order ? -1 : 0);\n      setTasks(data);\n      setLoading(false);\n    });\n  }, [onUpdateTasks]);\n\n  const onSortEnd = ({\n    oldIndex,\n    newIndex\n  }) => {\n    var newOrder = [...tasks];\n    newOrder = arrayMove(newOrder, oldIndex, newIndex);\n    updateIndex(newOrder);\n    setTasks(newOrder);\n  };\n\n  function deleteTask(e) {\n    var newTasks = tasks.filter(i => i.id !== e.id);\n    setTasks(newTasks);\n    var csrf_token = getCookie('csrftoken');\n    var url = BASE_URL + '/api/task-delete/' + e.id + '/';\n    fetch(url, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrf_token\n      }\n    });\n  }\n\n  function getCurrentDate() {\n    var date = new Date();\n    var dd = String(date.getDate()).padStart(2, '0');\n    var mm = String(date.getMonth() + 1).padStart(2, '0');\n    var year = date.getFullYear();\n    var today = year + '-' + mm + '-' + dd;\n    return today;\n  }\n\n  function markTaskAsComplete(e) {\n    var index = tasks.findIndex(i => i.id === e.id);\n    var updates = [...tasks];\n    updates[index].completed = true;\n    updates[index].finish_date = getCurrentDate();\n    var csrf_token = getCookie('csrftoken');\n    setTasks(updates);\n    taskUpdate(updates[index], csrf_token);\n  }\n\n  function focusTask(taskIndex) {\n    var newOrder = arrayMove(tasks, taskIndex, 0);\n    setTasks(newOrder);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isLoading === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lds-ellipsis\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 39\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 50\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 61\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 72\n    }\n  })), isLoading === false && /*#__PURE__*/React.createElement(ActiveTask.Provider, {\n    value: active_task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SortableComponent, {\n    items: tasks,\n    onSortEnd: onSortEnd,\n    onFocusTask: focusTask,\n    onDeleteTask: deleteTask,\n    onFinishedTask: markTaskAsComplete,\n    onEditTask: onEditTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/arturocastillo/developer/productivity-app/src/productivityreact/src/components/SortableList.js"],"names":["React","useState","useEffect","useRef","SortableContainer","SortableElement","arrayMove","getCookie","taskUpdate","fancyTimeFormat","StartTimer","BASE_URL","SortableItem","value","onActivateTask","onDeleteTask","onFinishedTask","onEditTask","active_style","setActiveStyle","timerStarted","id","completed","title","remaining","e","SortableComponent","items","onFocusTask","setActiveTask","taskId","index","findIndex","i","map","ActiveTask","createContext","SortableList","newTaskCreated","completedTasksList","onUpdateTasks","onSort","tasks","setTasks","active","setActive","active_task","isInitialMount","isLoading","setLoading","fetchTasks","url","response","fetch","ok","json","error","console","log","updateIndex","data","csrf_token","forEach","task","order","sorted","sort","a","b","current","then","onSortEnd","oldIndex","newIndex","newOrder","deleteTask","newTasks","filter","method","headers","getCurrentDate","date","Date","dd","String","getDate","padStart","mm","getMonth","year","getFullYear","today","markTaskAsComplete","updates","finish_date","focusTask","taskIndex"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,oBAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA8BC,eAA9B,QAAoD,SAApD;AACA,SAAQC,UAAR,QAAyB,SAAzB;AACA,SAAQC,QAAR,QAAuB,UAAvB;AAGA,MAAMC,YAAY,GAAGP,eAAe,CAAC,CAAC;AAACQ,EAAAA,KAAD;AAAQC,EAAAA,cAAR;AAAwBC,EAAAA,YAAxB;AAAsCC,EAAAA,cAAtC;AAAsDC,EAAAA;AAAtD,CAAD,KAAuE;AACxG,QAAM,CAACC,YAAD,EAAeC,cAAf,IAAiClB,QAAQ,CAAC,KAAD,CAA/C;;AAEA,WAASmB,YAAT,GAAwB;AACpBN,IAAAA,cAAc,CAACD,KAAK,CAACQ,EAAP,CAAd;AACAF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAE,UAAUD,YAAY,GAAG,gBAAH,GAAqB,EAA3C,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAE,OAAOL,KAAK,CAACS,SAAN,GAAkB,WAAlB,GAAgC,EAAvC,CAAlB;AAA8D,IAAA,IAAI,EAAC,UAAnE;AAA8E,IAAA,QAAQ,EAAE,MAAMN,cAAc,CAACH,KAAD,CAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAE,iBAAiBA,KAAK,CAACS,SAAN,GAAkB,cAAlB,GAAkC,EAAnD,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,KADX,CADJ,EAIKL,YAAY,KAAK,KAAjB,iBACG;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,eAAe,CAACI,KAAK,CAACW,SAAP,CADpB,CALR,CADJ,CALJ,eAkBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEX,KAAnB;AAA0B,IAAA,YAAY,EAAEO,YAAxC;AAAsD,IAAA,YAAY,EAAE,MAAMD,cAAc,CAAC,KAAD,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIKD,YAAY,KAAK,KAAjB,iBACD;AAAK,IAAA,SAAS,EAAE,iBAAiBL,KAAK,CAACS,SAAN,GAAkB,WAAlB,GAA+B,EAAhD,CAAhB;AAAqE,IAAA,OAAO,EAAEG,CAAC,IAAIR,UAAU,CAACJ,KAAD,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CALJ,eAcI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,IAAI,EAAC,IAAR;AAAa,IAAA,OAAO,EAAEY,CAAC,IAAIV,YAAY,CAACF,KAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CAdJ,CAlBJ,CADJ,CADJ;AA+CH,CAvDmC,CAApC;AAyDA,MAAMa,iBAAiB,GAAGtB,iBAAiB,CAAC,CAAC;AAACuB,EAAAA,KAAD;AAAQC,EAAAA,WAAR;AAAqBb,EAAAA,YAArB;AAAmCC,EAAAA,cAAnC;AAAmDC,EAAAA;AAAnD,CAAD,KAAqE;AAE7G,WAASY,aAAT,CAAuBC,MAAvB,EAA+B;AAC3B,QAAIC,KAAK,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASS,MAA9B,CAAZ;AACAF,IAAAA,WAAW,CAACG,KAAD,CAAX;AACH;;AAED,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACO,GAAN,CAAU,CAACrB,KAAD,EAAQkB,KAAR,kBACP,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAElB,KAAK,CAACQ,EAAzB;AAA6B,IAAA,KAAK,EAAEU,KAApC;AAA2C,IAAA,KAAK,EAAElB,KAAlD;AAAyD,IAAA,cAAc,EAAEgB,aAAzE;AAAwF,IAAA,YAAY,EAAEd,YAAtG;AAAoH,IAAA,cAAc,EAAEC,cAApI;AAAoJ,IAAA,UAAU,EAAEC,UAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADA;AAOH,CAd0C,CAA3C,C,CAiBA;;AACA,OAAO,MAAMkB,UAAU,GAAGnC,KAAK,CAACoC,aAAN,CAAoB,KAApB,CAAnB;AAEP,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,kBAAlB;AAAsCtB,EAAAA,UAAtC;AAAkDuB,EAAAA,aAAlD;AAAiEC,EAAAA;AAAjE,CAAtB,EAAiG;AAC5G,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC2C,MAAD,EAASC,SAAT,IAAsB5C,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM6C,WAAW,GAAG;AAACF,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAApB;AACA,QAAME,cAAc,GAAG5C,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM,CAAC6C,SAAD,EAAYC,UAAZ,IAA0BhD,QAAQ,CAAC,IAAD,CAAxC;;AAEA,QAAMiD,UAAU,GAAG,YAAY;AAC3B,UAAMC,GAAG,GAAGxC,QAAQ,GAAG,gBAAX,IAA+B4B,kBAAkB,GAAG,YAAH,GAAkB,SAAnE,CAAZ;;AACA,QAAI;AACA,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,aAAOC,QAAQ,CAACE,EAAT,GAAcF,QAAQ,CAACG,IAAT,EAAd,GAAgC,IAAvC;AACH,KAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,IAAP;AACH;AACJ,GATD;;AAWA,WAASG,WAAT,CAAqBC,IAArB,EAA2B;AACvB,QAAIC,UAAU,GAAGtD,SAAS,CAAC,WAAD,CAA1B;AAEAqD,IAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOhC,KAAP,KAAiB;AAC1BgC,MAAAA,IAAI,CAACC,KAAL,GAAajC,KAAb;AACAvB,MAAAA,UAAU,CAACuD,IAAD,EAAOF,UAAP,CAAV;AACH,KAHD;AAIH;;AAAA;AAED3D,EAAAA,SAAS,CAAC,MAAM;AACZuD,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AACA,YAAOjB,MAAP;AACI;AACI;;AACJ,WAAK,SAAL;AACI,YAAIwB,MAAM,GAAGvB,KAAK,CAACwB,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAAC3C,SAAF,GAAc4C,CAAC,CAAC5C,SAAjB,GAA8B,CAA9B,GAAoC4C,CAAC,CAAC5C,SAAF,GAAc2C,CAAC,CAAC3C,SAAjB,GAA8B,CAAC,CAA/B,GAAmC,CAA3F,CAAb;AACAiC,QAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACAtB,QAAAA,QAAQ,CAACsB,MAAD,CAAR;AACA;AAPR;AASH,GAXQ,EAWN,CAACxB,MAAD,CAXM,CAAT,CA3B4G,CAwC5G;;AACAvC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI6C,cAAc,CAACsB,OAAnB,EAA4B;AACxBtB,MAAAA,cAAc,CAACsB,OAAf,GAAyB,KAAzB;AACH,KAFD,MAEO;AACHnB,MAAAA,UAAU,GAAGoB,IAAb,CAAkBV,IAAI,IAAI;AACtBA,QAAAA,IAAI,CAACM,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACH,KAAF,GAAUI,CAAC,CAACJ,KAAb,GAAsB,CAAtB,GAA4BI,CAAC,CAACJ,KAAF,GAAUG,CAAC,CAACH,KAAb,GAAsB,CAAC,CAAvB,GAA2B,CAA1E;AACA,YAAIjC,KAAK,GAAG6B,IAAI,CAAC5B,SAAL,CAAeC,CAAC,IAAIA,CAAC,CAACV,KAAF,KAAYe,cAAc,CAACf,KAA/C,CAAZ;AACAqC,QAAAA,IAAI,GAAGtD,SAAS,CAACsD,IAAD,EAAO7B,KAAP,EAAc,CAAd,CAAhB;AACA6B,QAAAA,IAAI,CAACE,OAAL,CAAa,CAACjD,KAAD,EAAQoB,CAAR,KAAc;AACvBpB,UAAAA,KAAK,CAACmD,KAAN,GAAc/B,CAAd;AACH,SAFD;AAGAU,QAAAA,QAAQ,CAACiB,IAAD,CAAR;AACAD,QAAAA,WAAW,CAACC,IAAD,CAAX;AACH,OATD;AAUH;AAEJ,GAhBQ,EAgBN,CAACtB,cAAD,CAhBM,CAAT;AAkBApC,EAAAA,SAAS,CAAC,MAAM;AAEZgD,IAAAA,UAAU,GACToB,IADD,CACMV,IAAI,IAAI;AACVA,MAAAA,IAAI,CAACM,IAAL,CAAU,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACH,KAAF,GAAUI,CAAC,CAACJ,KAAb,GAAsB,CAAtB,GAA4BI,CAAC,CAACJ,KAAF,GAAUG,CAAC,CAACH,KAAb,GAAsB,CAAC,CAAvB,GAA2B,CAA1E;AACArB,MAAAA,QAAQ,CAACiB,IAAD,CAAR;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACC,KALL;AAOH,GATQ,EASN,CAACT,aAAD,CATM,CAAT;;AAWA,QAAM+B,SAAS,GAAI,CAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,KAA0B;AACzC,QAAIC,QAAQ,GAAG,CAAC,GAAGhC,KAAJ,CAAf;AACAgC,IAAAA,QAAQ,GAAGpE,SAAS,CAACoE,QAAD,EAAWF,QAAX,EAAqBC,QAArB,CAApB;AAEAd,IAAAA,WAAW,CAACe,QAAD,CAAX;AACA/B,IAAAA,QAAQ,CAAC+B,QAAD,CAAR;AAEH,GAPD;;AASA,WAASC,UAAT,CAAoBlD,CAApB,EAAuB;AACnB,QAAImD,QAAQ,GAAGlC,KAAK,CAACmC,MAAN,CAAa5C,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASI,CAAC,CAACJ,EAA7B,CAAf;AACAsB,IAAAA,QAAQ,CAACiC,QAAD,CAAR;AAEA,QAAIf,UAAU,GAAGtD,SAAS,CAAC,WAAD,CAA1B;AACA,QAAI4C,GAAG,GAAGxC,QAAQ,GAAG,mBAAX,GAAiCc,CAAC,CAACJ,EAAnC,GAAwC,GAAlD;AAEAgC,IAAAA,KAAK,CAACF,GAAD,EAAM;AACP2B,MAAAA,MAAM,EAAE,QADD;AAEPC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,uBAAelB;AAFV;AAFF,KAAN,CAAL;AAOH;;AAED,WAASmB,cAAT,GAA0B;AACtB,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,QAAIC,EAAE,GAAGC,MAAM,CAACH,IAAI,CAACI,OAAL,EAAD,CAAN,CAAuBC,QAAvB,CAAgC,CAAhC,EAAkC,GAAlC,CAAT;AACA,QAAIC,EAAE,GAAGH,MAAM,CAACH,IAAI,CAACO,QAAL,KAAkB,CAAnB,CAAN,CAA4BF,QAA5B,CAAqC,CAArC,EAAuC,GAAvC,CAAT;AACA,QAAIG,IAAI,GAAGR,IAAI,CAACS,WAAL,EAAX;AAEA,QAAIC,KAAK,GAAGF,IAAI,GAAG,GAAP,GAAaF,EAAb,GAAkB,GAAlB,GAAwBJ,EAApC;AACA,WAAOQ,KAAP;AACH;;AAED,WAASC,kBAAT,CAA4BnE,CAA5B,EAA+B;AAC3B,QAAIM,KAAK,GAAGW,KAAK,CAACV,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASI,CAAC,CAACJ,EAAhC,CAAZ;AACA,QAAIwE,OAAO,GAAG,CAAC,GAAGnD,KAAJ,CAAd;AACAmD,IAAAA,OAAO,CAAC9D,KAAD,CAAP,CAAeT,SAAf,GAA2B,IAA3B;AACAuE,IAAAA,OAAO,CAAC9D,KAAD,CAAP,CAAe+D,WAAf,GAA6Bd,cAAc,EAA3C;AACA,QAAInB,UAAU,GAAGtD,SAAS,CAAC,WAAD,CAA1B;AAEAoC,IAAAA,QAAQ,CAACkD,OAAD,CAAR;AACArF,IAAAA,UAAU,CAACqF,OAAO,CAAC9D,KAAD,CAAR,EAAiB8B,UAAjB,CAAV;AACH;;AAED,WAASkC,SAAT,CAAmBC,SAAnB,EAA8B;AAC1B,QAAItB,QAAQ,GAAGpE,SAAS,CAACoC,KAAD,EAAQsD,SAAR,EAAmB,CAAnB,CAAxB;AACArD,IAAAA,QAAQ,CAAC+B,QAAD,CAAR;AACH;;AAAA;AAED,sBACI,0CAEC1B,SAAS,KAAK,IAAd,iBACD;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,eAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzC,eAAoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApD,eAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/D,CAHA,EAMCA,SAAS,KAAK,KAAd,iBACD,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAEF,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEJ,KAA1B;AAAiC,IAAA,SAAS,EAAE6B,SAA5C;AAAuD,IAAA,WAAW,EAAEwB,SAApE;AAA+E,IAAA,YAAY,EAAEpB,UAA7F;AAAyG,IAAA,cAAc,EAAEiB,kBAAzH;AAA6I,IAAA,UAAU,EAAE3E,UAAzJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPA,CADJ;AAcH","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\nimport {SortableContainer, SortableElement} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport {getCookie, taskUpdate,fancyTimeFormat} from './utils'\nimport {StartTimer} from './Timer'\nimport {BASE_URL} from './../App'\n\n\nconst SortableItem = SortableElement(({value, onActivateTask, onDeleteTask, onFinishedTask, onEditTask}) => {\n    const [active_style, setActiveStyle] = useState(false)\n\n    function timerStarted() {\n        onActivateTask(value.id);\n        setActiveStyle(true);\n    }\n\n    return (\n        <li className={\"box \" + (active_style ? 'task-is-active': '')}>\n            <div className=\"level is-mobile\">\n                <div className=\"level-left\">\n                    <input className={\" \" + (value.completed ? 'is-hidden' : '')} type=\"checkbox\" onChange={() => onFinishedTask(value)}/>\n                </div>\n\n                <div className=\"level-item\">\n                    <div>\n                        <h1 className={\"title is-5 \" + (value.completed ? 'is-completed': '')}>\n                            {value.title}\n                        </h1>\n                        {active_style === false &&                         \n                            <p className=\"is-help has-text-centered\">\n                                {fancyTimeFormat(value.remaining)}\n                            </p>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"level-right\">\n\n                    <StartTimer value={value} onTimerStart={timerStarted} onTimerPause={() => setActiveStyle(false)}/>\n\n                    {active_style === false &&                     \n                    <div className={\"level-item \" + (value.completed ? 'is-hidden': '')} onClick={e => onEditTask(value)}>\n                        <a href=\"#/\">\n                            <span className=\"icon has-text-warning\">\n                                <i className=\"fas fa-edit\"></i>\n                            </span>\n                        </a>\n                    </div>\n                    }\n\n                    <div className=\"level-item\">\n                        <a href=\"#/\" onClick={e => onDeleteTask(value)}>\n                            <span className=\"icon has-text-danger\">\n                                <i className=\"fas fa-lg fa-times\"></i>\n                            </span>\n                        </a>\n                    </div>\n\n                </div>\n\n            </div>\n        </li>\n    )\n});\n\nconst SortableComponent = SortableContainer(({items, onFocusTask, onDeleteTask, onFinishedTask, onEditTask }) => {\n\n    function setActiveTask(taskId) {\n        var index = items.findIndex(i => i.id === taskId);\n        onFocusTask(index);\n    }\n\n    return (\n    <ul>\n        {items.map((value, index) => (\n            <SortableItem key={value.id} index={index} value={value} onActivateTask={setActiveTask} onDeleteTask={onDeleteTask} onFinishedTask={onFinishedTask} onEditTask={onEditTask}/>\n        ))}\n    </ul>\n    )\n})\n\n\n// Context for setting active tasks\nexport const ActiveTask = React.createContext(false)\n\nexport default function SortableList({ newTaskCreated, completedTasksList, onEditTask, onUpdateTasks, onSort }) {\n    const [tasks, setTasks] = useState([]);\n    const [active, setActive] = useState(false);\n    const active_task = {active, setActive};\n    const isInitialMount = useRef(true);\n    const [isLoading, setLoading] = useState(true);\n\n    const fetchTasks = async () => {\n        const url = BASE_URL + 'api/task-list/' + (completedTasksList ? 'completed/' : 'active/')\n        try {\n            const response = await fetch(url);\n            return response.ok ? response.json() : null;\n        } catch (error) {\n            console.log(error);\n            return null;\n        }\n    }\n\n    function updateIndex(data) {\n        var csrf_token = getCookie('csrftoken');\n        \n        data.forEach((task, index) => {\n            task.order = index;\n            taskUpdate(task, csrf_token);\n        });\n    };\n\n    useEffect(() => {\n        console.log('we sort')\n        switch(onSort) {\n            default:\n                break;\n            case 'longest':\n                let sorted = tasks.sort((a, b) => (a.remaining > b.remaining) ? 1 : ((b.remaining > a.remaining) ? -1 : 0));\n                console.log(sorted)\n                setTasks(sorted)\n                break;\n        }\n    }, [onSort])\n\n    //Update list when new task is created\n    useEffect(() => {\n        if (isInitialMount.current) {\n            isInitialMount.current = false;\n        } else {\n            fetchTasks().then(data => {\n                data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\n                var index = data.findIndex(i => i.title === newTaskCreated.title);\n                data = arrayMove(data, index, 0);\n                data.forEach((value, i) => {\n                    value.order = i;\n                })\n                setTasks(data);\n                updateIndex(data);\n            })\n        }\n\n    }, [newTaskCreated])\n\n    useEffect(() => {\n        \n        fetchTasks()\n        .then(data => {\n            data.sort((a, b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\n            setTasks(data);\n            setLoading(false);\n            }\n        );\n    }, [onUpdateTasks]);\n\n    const onSortEnd =  ({oldIndex, newIndex}) => {\n        var newOrder = [...tasks];\n        newOrder = arrayMove(newOrder, oldIndex, newIndex);\n                        \n        updateIndex(newOrder);\n        setTasks(newOrder);\n\n    };\n\n    function deleteTask(e) {\n        var newTasks = tasks.filter(i => i.id !== e.id);\n        setTasks(newTasks);\n\n        var csrf_token = getCookie('csrftoken');\n        var url = BASE_URL + '/api/task-delete/' + e.id + '/';\n\n        fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrf_token,\n            }\n        })\n    }\n\n    function getCurrentDate() {\n        var date = new Date();\n        var dd = String(date.getDate()).padStart(2,'0');\n        var mm = String(date.getMonth() + 1).padStart(2,'0');\n        var year = date.getFullYear();\n\n        var today = year + '-' + mm + '-' + dd;\n        return today;\n    }\n\n    function markTaskAsComplete(e) {\n        var index = tasks.findIndex(i => i.id === e.id)\n        var updates = [...tasks];\n        updates[index].completed = true;\n        updates[index].finish_date = getCurrentDate();\n        var csrf_token = getCookie('csrftoken')\n\n        setTasks(updates);\n        taskUpdate(updates[index], csrf_token);\n    }\n\n    function focusTask(taskIndex) {\n        var newOrder = arrayMove(tasks, taskIndex, 0);\n        setTasks(newOrder)\n    };\n\n    return (\n        <>\n        \n        {isLoading === true && \n        <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n        }\n\n        {isLoading === false && \n        <ActiveTask.Provider value={active_task}>\n            <SortableComponent items={tasks} onSortEnd={onSortEnd} onFocusTask={focusTask} onDeleteTask={deleteTask} onFinishedTask={markTaskAsComplete} onEditTask={onEditTask}/>\n        </ActiveTask.Provider>\n        }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}